{"version":3,"sources":["common/constants.js","common/config.js","common/speech.js","common/util.js","hooks/useWakeLock.js","components/CopyButton.js","components/AthletesSettings.js","assets/discord.svg","assets/discordMark.svg","components/DiscordBot.js","components/Footer.js","components/Header.js","components/App.js","index.js"],"names":["DEFAULT_ATHLETE_NAMES","LOCAL_STORAGE_KEY","DEFAULT_ATHLETES","slice","map","athleteName","text","enabled","time","voiceCommands","nextAthlete","started","speakCommand","command","args","voice","msg","SpeechSynthesisUtterance","lang","window","speechSynthesis","cancel","speak","toSeconds","ms","Math","round","isSupported","navigator","CopyButton","useState","copied","setCopied","copiedTimeout","useRef","undefined","OverlayTrigger","placement","overlay","Tooltip","id","Button","variant","onClick","clipboard","writeText","current","clearTimeout","setTimeout","icon","faCopy","AthletesSettings","athletes","onChange","discordCommand","athlete","trim","replaceAll","join","athleteIndex","Form","Group","as","Row","controlId","Col","sm","InputGroup","Control","style","background","type","placeholder","value","e","a","ai","target","min","Append","ButtonGroup","toggle","ToggleButton","name","checked","disabled","filter","length","faSkullCrossbones","DiscordBot","Alert","Heading","Badge","pill","xs","md","src","discordLogo","alt","className","discordMarkLogo","rel","href","Footer","faPaypal","faGithub","Header","Navbar","bg","Brand","faBiking","initialConfig","rawConfig","localStorage","getItem","config","JSON","parse","speechEnabled","startDelay","loadConfig","App","state","setState","active","wakelockRef","useEffect","release","request","document","visibilityState","wakeLock","addEventListener","removeEventListener","useWakeLock","setStartDelay","setSpeechEnabled","setAthletes","getAthleteName","timeUntilNextChange","setTimeUntilNextChange","currentAthlete","setCurrentAthlete","setItem","stringify","useMemo","athletesWithIndex","index","find","startTimeRef","prevTimeRef","pauseTimeRef","changeToNextAthlete","now","Date","useInterval","changeTime","secondsSinceStart","max","Container","Jumbotron","faArrowRight","faClock","ProgressBar","transform","faStop","faPlay","faPause","faForward","size","Card","Body","Label","newCount","newAthletes","Array","keys","i","Check","label","Text","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.600d7272.chunk.js","sourcesContent":["export const DEFAULT_ATHLETE_NAMES = [\"Amelia\", \"Bowie\", \"Coco\", \"Dan\", \"Emma\", \"Finn\", \"Grace\", \"Henry\", \"Irene\", \"Jack\"];\n\nexport const DEFAULT_START_DELAY = 0;\nexport const DEFAULT_TIME_PER_ATHLETE = 30;\nexport const DEFAULT_SPEECH_ENABLED = false;\n","import { DEFAULT_ATHLETE_NAMES, DEFAULT_SPEECH_ENABLED, DEFAULT_START_DELAY, DEFAULT_TIME_PER_ATHLETE } from \"./constants\";\n\nconst LOCAL_STORAGE_KEY = \"config\";\n\nconst DEFAULT_ATHLETES = DEFAULT_ATHLETE_NAMES.slice(0, 6).map((athleteName) => ({\n    text: athleteName,\n    enabled: true,\n    time: DEFAULT_TIME_PER_ATHLETE,\n}));\n\nexport function loadConfig() {\n    try {\n        const rawConfig = localStorage.getItem(LOCAL_STORAGE_KEY);\n        const config = JSON.parse(rawConfig);\n\n        return {\n            athletes: config.athletes || DEFAULT_ATHLETES,\n            speechEnabled: config.speechEnabled,\n            startDelay: config.startDelay,\n        };\n    } catch {\n        return {\n            athletes: DEFAULT_ATHLETES,\n            speechEnabled: DEFAULT_SPEECH_ENABLED,\n            startDelay: DEFAULT_START_DELAY,\n        };\n    }\n}\n\nexport function saveConfig(config) {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(config));\n}\n","const voiceCommands = {\n    [10 * 60]: () => \"10 minutes\",\n    [5 * 60]: () => \"5 minutes\",\n    [3 * 60]: () => \"3 minutes\",\n    [2 * 60]: () => \"2 minutes\",\n    [1 * 60]: () => \"1 minute\",\n    30: () => \"30 seconds\",\n    15: ({ nextAthlete }) => `${nextAthlete}. Get ready.`,\n    10: ({ started }) => (started ? \"Change in 10\" : \"Start in 10\"),\n    5: () => \"Five\",\n    2: () => \"Two\",\n    1: () => \"One\",\n    0: ({ nextAthlete, started }) => (started ? `Change to ${nextAthlete}` : \"Let's go\"),\n};\n\nexport function speakCommand(command, args) {\n    if (voiceCommands[command]) {\n        speak(voiceCommands[command](args));\n    }\n}\n\nexport function speak(text, voice) {\n    const msg = new SpeechSynthesisUtterance();\n    msg.text = text;\n    msg.lang = \"en-US\";\n    msg.voice = voice;\n\n    window.speechSynthesis.cancel();\n    window.speechSynthesis.speak(msg);\n}\n","export function toSeconds(ms) {\n    return Math.round(ms / 1_000);\n}\n","import { useEffect, useRef } from \"react\";\n\nconst isSupported = \"wakeLock\" in navigator;\n\nexport function useWakeLock(active) {\n    const wakelockRef = useRef(null);\n\n    useEffect(() => {\n        if (!isSupported) {\n            return;\n        }\n\n        if (!active) {\n            return;\n        }\n\n        const release = async () => {\n            await wakelockRef.current?.release();\n            wakelockRef.current = null;\n        };\n\n        const request = async () => {\n            if (document.visibilityState !== \"visible\") {\n                return;\n            }\n\n            try {\n                await release();\n                wakelockRef.current = await navigator.wakeLock.request(\"screen\");\n            } catch {}\n        };\n\n        request();\n        document.addEventListener(\"visibilitychange\", request);\n\n        return () => {\n            release();\n            document.removeEventListener(\"visibilitychange\", request);\n        };\n    }, [active]);\n}\n","import { faCopy } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useRef, useState } from \"react\";\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\nexport function CopyButton({ command }) {\n    const [copied, setCopied] = useState(false);\n    const copiedTimeout = useRef(undefined);\n\n    const copyCommand = () => {\n        navigator.clipboard.writeText(command);\n\n        if (copiedTimeout.current) {\n            clearTimeout(copiedTimeout.current);\n            copiedTimeout.current = undefined;\n        }\n        setCopied(true);\n        copiedTimeout.current = setTimeout(() => setCopied(false), 5_000);\n    };\n\n    return (\n        <OverlayTrigger\n            placement=\"right\"\n            overlay={<Tooltip id=\"tooltip-copy-athletes\">{copied ? \"Copied!\" : \"Copy Discord Bot command\"}</Tooltip>}\n        >\n            <Button variant=\"outline-link\" onClick={copyCommand}>\n                <FontAwesomeIcon icon={faCopy} />\n            </Button>\n        </OverlayTrigger>\n    );\n}\n","import { faSkullCrossbones } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ButtonGroup, Col, Form, InputGroup, Row, ToggleButton } from \"react-bootstrap\";\nimport { CopyButton } from \"./CopyButton\";\n\nexport function AthletesSettings({ athletes, onChange }) {\n    const discordCommand = `!t config athletes ${athletes\n        .map((athlete) => `${athlete.text.trim().replaceAll(\" \", \"_\").replaceAll(\" \", \"_\")}:${athlete.time}`)\n        .join(\" \")}`;\n\n    return (\n        <>\n            <h3>\n                Athletes <CopyButton command={discordCommand} />\n            </h3>\n\n            {athletes.map((athlete, athleteIndex) => (\n                <Form.Group key={athleteIndex} as={Row} controlId={`athlete-${athleteIndex}`}>\n                    <Col sm={12}>\n                        <InputGroup>\n                            <Form.Control\n                                style={{ background: !athlete.enabled && \"#6c757d80\" }}\n                                type=\"text\"\n                                placeholder=\"Name\"\n                                value={athlete.text}\n                                onChange={(e) =>\n                                    onChange(\n                                        athletes.map((a, ai) => (ai === athleteIndex ? { ...a, text: e.target.value } : a))\n                                    )\n                                }\n                            />\n                            <Form.Control\n                                style={{ background: !athlete.enabled && \"#6c757d80\" }}\n                                type=\"number\"\n                                placeholder=\"Time (in seconds)\"\n                                min={1}\n                                value={athlete.time}\n                                onChange={(e) =>\n                                    onChange(\n                                        athletes.map((a, ai) => (ai === athleteIndex ? { ...a, time: +e.target.value } : a))\n                                    )\n                                }\n                            />\n                            <InputGroup.Append>\n                                <ButtonGroup toggle>\n                                    <ToggleButton\n                                        variant=\"outline-secondary\"\n                                        type=\"checkbox\"\n                                        name={`athlete-${athleteIndex}-enabled`}\n                                        checked={!athlete.enabled}\n                                        disabled={athlete.enabled && athletes.filter((a) => a.enabled).length === 1}\n                                        onChange={(e) =>\n                                            onChange(\n                                                athletes.map((a, ai) =>\n                                                    ai === athleteIndex ? { ...a, enabled: !e.target.checked } : a\n                                                )\n                                            )\n                                        }\n                                    >\n                                        <FontAwesomeIcon icon={faSkullCrossbones} />\n                                    </ToggleButton>\n                                </ButtonGroup>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </Col>\n                </Form.Group>\n            ))}\n        </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/discord.3372aeeb.svg\";","export default __webpack_public_path__ + \"static/media/discordMark.d2c3bfa7.svg\";","import { Alert, Badge, Col, Row } from \"react-bootstrap\";\nimport discordLogo from \"../assets/discord.svg\";\nimport discordMarkLogo from \"../assets/discordMark.svg\";\n\nexport function DiscordBot() {\n    return (\n        <Alert variant=\"info\">\n            <Alert.Heading>\n                Discord Bot{\" \"}\n                <Badge pill variant=\"primary\">\n                    Beta\n                </Badge>\n            </Alert.Heading>\n            <Row>\n                <Col xs={12} sm={4} md={2}>\n                    <img src={discordLogo} alt=\"Discord Logo\" className=\"d-block d-sm-none\" />\n                    <img src={discordMarkLogo} alt=\"Discord Logo\" className=\"d-none d-sm-block\" />\n                </Col>\n                <Col xs={12} sm={8} md={10}>\n                    <p className=\"mt-2\">\n                        No need to run the Web App on a rider's computer and mess around with the audio setup. Just add the\n                        TTT-Timer Discord Bot to your server and type <code>!t help</code> for details on how to use it.\n                        After starting the timer, it will appear as a user within your call and coach you through the race.\n                    </p>\n\n                    <div className=\"d-flex justify-content-end\">\n                        <a\n                            className=\"btn btn-light\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href=\"https://andipaetzold.github.io/tttt-discord\"\n                        >\n                            Documentation\n                        </a>\n\n                        <a\n                            className=\"btn btn-primary ml-2\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href=\"https://discord.com/api/oauth2/authorize?client_id=806979974594560060&amp;permissions=3155968&amp;scope=bot\"\n                        >\n                            Install\n                        </a>\n                    </div>\n                </Col>\n            </Row>\n        </Alert>\n    );\n}\n","import { faGithub, faPaypal } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport function Footer() {\n    return (\n        <footer className=\"text-muted mt-4 mb-2 text-center\">\n            <p>\n                <small>\n                    Made with ♥ for{\" \"}\n                    <a href=\"https://www.wtrl.racing\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        WTRL\n                    </a>{\" \"}\n                    by{\" \"}\n                    <a href=\"mailto:tttt@andipaetzold.com\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        Andi P&auml;tzold\n                    </a>\n                </small>\n            </p>\n            <p>\n                <small>\n                    <a href=\"https://paypal.me/andipaetzold\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        <FontAwesomeIcon icon={faPaypal} /> Donate via PayPal\n                    </a>\n                </small>\n            </p>\n            <p>\n                <small>\n                    <a href=\"https://github.com/andipaetzold/tttt\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        <FontAwesomeIcon icon={faGithub} /> GitHub\n                    </a>\n                </small>\n            </p>\n        </footer>\n    );\n}\n","import { faBiking } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Navbar } from \"react-bootstrap\";\n\nexport function Header() {\n    return (\n        <Navbar bg=\"light\" className=\"mb-2\">\n            <Navbar.Brand className=\"mx-auto\">\n                <FontAwesomeIcon icon={faBiking} /> Team Time Trial Timer <FontAwesomeIcon icon={faBiking} />\n            </Navbar.Brand>\n        </Navbar>\n    );\n}\n","import { faClock } from \"@fortawesome/free-regular-svg-icons\";\nimport { faArrowRight, faForward, faPause, faPlay, faStop } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport useInterval from \"@use-it/interval\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, Card, Container, Form, Jumbotron, ProgressBar } from \"react-bootstrap\";\nimport { loadConfig, saveConfig } from \"../common/config\";\nimport { DEFAULT_ATHLETE_NAMES, DEFAULT_TIME_PER_ATHLETE } from \"../common/constants\";\nimport { speakCommand } from \"../common/speech\";\nimport { toSeconds } from \"../common/util\";\nimport { useWakeLock } from \"../hooks/useWakeLock\";\nimport { AthletesSettings } from \"./AthletesSettings\";\nimport { CopyButton } from \"./CopyButton\";\nimport { DiscordBot } from \"./DiscordBot\";\nimport { Footer } from \"./Footer\";\nimport { Header } from \"./Header\";\n\nconst initialConfig = loadConfig();\n\nexport default function App() {\n    const [state, setState] = useState(\"stopped\");\n\n    useWakeLock(state === \"running\" || state === \"paused\");\n\n    const [startDelay, setStartDelay] = useState(initialConfig.startDelay);\n    const [speechEnabled, setSpeechEnabled] = useState(initialConfig.speechEnabled);\n    const [athletes, setAthletes] = useState(initialConfig.athletes);\n\n    const getAthleteName = (athleteIndex) => {\n        if (athleteIndex === undefined) {\n            return \"\";\n        }\n\n        return athletes[athleteIndex].text || `Athlete ${athleteIndex + 1}`;\n    };\n\n    const [timeUntilNextChange, setTimeUntilNextChange] = useState(0);\n    const [currentAthlete, setCurrentAthlete] = useState(undefined);\n\n    useEffect(() => {\n        saveConfig({ athletes, startDelay, speechEnabled });\n    }, [athletes, startDelay, speechEnabled]);\n\n    const nextAthlete = useMemo(() => {\n        const athletesWithIndex = athletes.map((a, ai) => ({ ...a, index: ai }));\n\n        if (currentAthlete === undefined) {\n            return athletesWithIndex.find((a) => a.enabled).index;\n        }\n\n        return [...athletesWithIndex.slice(currentAthlete + 1), ...athletesWithIndex].filter((a) => a.enabled)[0].index;\n    }, [currentAthlete, athletes]);\n\n    const startTimeRef = useRef();\n    const prevTimeRef = useRef();\n    const pauseTimeRef = useRef();\n\n    const speak = (command) => {\n        if (!speechEnabled) {\n            return;\n        }\n        speakCommand(command, {\n            nextAthlete: getAthleteName(nextAthlete),\n            started: currentAthlete !== undefined,\n        });\n    };\n\n    const changeToNextAthlete = () => {\n        setCurrentAthlete(nextAthlete);\n        setTimeUntilNextChange(athletes[nextAthlete].time);\n\n        const now = Date.now();\n        startTimeRef.current = now;\n        if (state === \"paused\") {\n            pauseTimeRef.current = now;\n        }\n    };\n\n    useInterval(() => {\n        if (state !== \"running\") {\n            return;\n        }\n\n        const changeTime = currentAthlete === undefined ? startDelay : athletes[currentAthlete].time;\n\n        const now = Date.now();\n\n        const secondsSinceStart = toSeconds(now - startTimeRef.current);\n        const prevSecondsSinceStart = toSeconds(prevTimeRef.current - startTimeRef.current);\n\n        if (secondsSinceStart !== prevSecondsSinceStart) {\n            speak(Math.max(0, changeTime - secondsSinceStart));\n            if (secondsSinceStart >= changeTime) {\n                changeToNextAthlete();\n            } else {\n                setTimeUntilNextChange(Math.max(changeTime - secondsSinceStart, 0));\n            }\n        }\n\n        prevTimeRef.current = now;\n    }, 500);\n\n    const handleStart = () => {\n        const now = Date.now();\n\n        prevTimeRef.current = now;\n        startTimeRef.current = now;\n\n        setTimeUntilNextChange(startDelay > 0 ? startDelay : athletes[0].time);\n        setCurrentAthlete(startDelay > 0 ? undefined : nextAthlete);\n\n        setState(\"running\");\n    };\n\n    const handleStop = () => {\n        setState(\"stopped\");\n    };\n\n    const handlePause = () => {\n        setState(\"paused\");\n        pauseTimeRef.current = Date.now();\n    };\n\n    const handleResume = () => {\n        setState(\"running\");\n        startTimeRef.current = Date.now() - (pauseTimeRef.current - startTimeRef.current);\n    };\n\n    return (\n        <>\n            <Header />\n\n            <Container>\n                <Jumbotron className=\"mb-2\">\n                    {state !== \"stopped\" ? (\n                        <>\n                            <h1 className=\"text-center display-2\">\n                                {currentAthlete === undefined ? \"Wait\" : getAthleteName(currentAthlete)}\n                            </h1>\n\n                            <h2 className=\"text-center display-5\">\n                                <FontAwesomeIcon icon={faArrowRight} /> {getAthleteName(nextAthlete)}\n                            </h2>\n\n                            <h3 className=\"text-center display-6\">\n                                <FontAwesomeIcon icon={faClock} /> {timeUntilNextChange}s\n                            </h3>\n                            <ProgressBar\n                                style={{ transform: \"scaleX(-1)\", background: \"white\" }}\n                                now={timeUntilNextChange}\n                                max={currentAthlete === undefined ? startDelay : athletes[currentAthlete].time}\n                            />\n\n                            <div className=\"mt-4 text-center\">\n                                <Button variant=\"danger\" className=\"mr-1\" onClick={handleStop}>\n                                    <FontAwesomeIcon icon={faStop} /> Stop\n                                </Button>\n                                {state === \"paused\" ? (\n                                    <Button variant=\"info\" className=\"mr-1\" onClick={handleResume}>\n                                        <FontAwesomeIcon icon={faPlay} /> Resume\n                                    </Button>\n                                ) : (\n                                    <Button variant=\"info\" className=\"mr-1\" onClick={handlePause}>\n                                        <FontAwesomeIcon icon={faPause} /> Pause\n                                    </Button>\n                                )}\n\n                                <Button variant=\"warning\" onClick={changeToNextAthlete}>\n                                    <FontAwesomeIcon icon={faForward} /> Skip\n                                </Button>\n                            </div>\n                        </>\n                    ) : (\n                        <div className=\"text-center\">\n                            <Button variant=\"primary\" onClick={handleStart} size=\"lg\">\n                                <FontAwesomeIcon icon={faPlay} /> Start\n                            </Button>\n                        </div>\n                    )}\n                </Jumbotron>\n\n                <Card className=\"mb-2\">\n                    <Card.Body>\n                        <AthletesSettings athletes={athletes} onChange={setAthletes} />\n\n                        <h3>Settings</h3>\n                        <Form.Group controlId=\"startDelay\">\n                            <Form.Label>\n                                Start Delay (in seconds) <CopyButton command={`!t config delay ${startDelay}`} />\n                            </Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                value={startDelay}\n                                onChange={(e) => setStartDelay(+e.target.value)}\n                                min={0}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"athleteCount\">\n                            <Form.Label>Athlete Count</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                value={athletes.length}\n                                onChange={(e) => {\n                                    const newCount = Math.max(1, Math.min(DEFAULT_ATHLETE_NAMES.length, +e.target.value));\n                                    const newAthletes = [...new Array(newCount).keys()].map((i) => ({\n                                        text: athletes[i]?.text ?? DEFAULT_ATHLETE_NAMES[i],\n                                        time: athletes[i]?.time ?? DEFAULT_TIME_PER_ATHLETE,\n                                        enabled: athletes[i]?.enabled ?? true,\n                                    }));\n                                    setAthletes(newAthletes);\n                                }}\n                                min={1}\n                                max={DEFAULT_ATHLETE_NAMES.length}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"speechEnabled\">\n                            <Form.Check\n                                type=\"checkbox\"\n                                label=\"Voice Output\"\n                                checked={speechEnabled}\n                                onChange={(e) => setSpeechEnabled(e.target.checked)}\n                            />\n                            <Form.Text>Voice Output is not supported on iOS</Form.Text>\n                        </Form.Group>\n                    </Card.Body>\n                </Card>\n\n                <DiscordBot />\n                <Footer />\n            </Container>\n        </>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}