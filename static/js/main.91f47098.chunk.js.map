{"version":3,"sources":["common/constants.tsx","common/config.tsx","common/speech.tsx","common/util.tsx","hooks/useWakeLock.tsx","components/CopyButton.tsx","components/AthletesSettings.tsx","components/Countdown.tsx","assets/discord.svg","assets/discordMark.svg","components/DiscordBot.tsx","components/Footer.tsx","components/Header.tsx","components/App.tsx","index.tsx"],"names":["DEFAULT_ATHLETE_NAMES","LOCAL_STORAGE_KEY","DEFAULT_ATHLETES","slice","map","athleteName","text","enabled","time","voiceCommands","nextAthlete","started","speakCommand","command","args","msg","SpeechSynthesisUtterance","lang","window","speechSynthesis","cancel","speak","secondsToString","fullTimeInSeconds","minutes","Math","floor","seconds","toString","padStart","isSupported","navigator","CopyButton","useState","copied","setCopied","copiedTimeout","useRef","undefined","OverlayTrigger","placement","overlay","Tooltip","id","Button","variant","size","className","onClick","clipboard","writeText","current","clearTimeout","setTimeout","icon","faCopy","AthletesSettings","athletes","onChange","state","discordCommand","athlete","trim","replaceAll","join","getBackgroundColor","athleteIndex","Form","Group","as","Row","controlId","Col","sm","InputGroup","Control","style","background","type","placeholder","value","e","a","ai","target","min","step","ButtonGroup","toggle","Append","ToggleButton","name","checked","disabled","filter","length","faSkullCrossbones","_","faTrash","block","faPlus","Countdown","totalTime","timePassed","faClock","ProgressBar","transform","now","max","DiscordBot","Alert","Heading","xs","md","src","discordLogo","alt","discordMarkLogo","rel","href","Footer","faPaypal","faGithub","Header","Navbar","bg","Brand","faBiking","initialConfig","rawConfig","localStorage","getItem","config","JSON","parse","speechEnabled","startDelay","loadConfig","App","setState","useFullScreenHandle","fullscreenRef","node","fullscreenActive","active","enterFullscreen","enter","leaveFullscreen","exit","wakelockRef","useEffect","release","request","document","visibilityState","wakeLock","addEventListener","removeEventListener","useWakeLock","setStartDelay","setSpeechEnabled","setAthletes","round","setRound","getAthleteName","setItem","stringify","useMemo","athletesWithIndex","index","currentAthlete","find","prevTimeRef","useInterval","Date","timeDiff","updatedRound","remainingTime","remainingTimeInSeconds","Container","Jumbotron","ref","faArrowRight","faPlay","faPause","faForward","right","bottom","faStop","faVolumeUp","faVolumeMute","faCompress","faExpand","maxWidth","Card","Body","Label","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","process","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91f47098.chunk.js","sourcesContent":["export const DEFAULT_ATHLETE_NAMES = [\"Amelia\", \"Bowie\", \"Coco\", \"Dan\", \"Emma\", \"Finn\", \"Grace\", \"Henry\", \"Irene\", \"Jack\"];\n\nexport const DEFAULT_START_DELAY = 0;\nexport const DEFAULT_TIME_PER_ATHLETE = 30;\nexport const DEFAULT_SPEECH_ENABLED = true;\n","import { Athlete } from \"../types\";\nimport { DEFAULT_ATHLETE_NAMES, DEFAULT_SPEECH_ENABLED, DEFAULT_START_DELAY, DEFAULT_TIME_PER_ATHLETE } from \"./constants\";\n\ninterface Config {\n    athletes: Athlete[];\n    speechEnabled: boolean;\n    startDelay: number;\n}\n\nconst LOCAL_STORAGE_KEY = \"config\";\n\nconst DEFAULT_ATHLETES = DEFAULT_ATHLETE_NAMES.slice(0, 6).map((athleteName) => ({\n    text: athleteName,\n    enabled: true,\n    time: DEFAULT_TIME_PER_ATHLETE,\n}));\n\nexport function loadConfig() {\n    try {\n        const rawConfig = localStorage.getItem(LOCAL_STORAGE_KEY) ?? \"{}\";\n        const config: Partial<Config> = JSON.parse(rawConfig);\n\n        return {\n            athletes: config.athletes ?? DEFAULT_ATHLETES,\n            speechEnabled: config.speechEnabled ?? DEFAULT_SPEECH_ENABLED,\n            startDelay: config.startDelay ?? DEFAULT_START_DELAY,\n        };\n    } catch {\n        return {\n            athletes: DEFAULT_ATHLETES,\n            speechEnabled: DEFAULT_SPEECH_ENABLED,\n            startDelay: DEFAULT_START_DELAY,\n        };\n    }\n}\n\nexport function saveConfig(config: Config) {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(config));\n}\n","interface Args {\n    nextAthlete: string;\n    started: boolean;\n}\n\nconst voiceCommands: Record<string, (args: Args) => string> = {\n    [10 * 60]: () => \"10 minutes\",\n    [5 * 60]: () => \"5 minutes\",\n    [3 * 60]: () => \"3 minutes\",\n    [2 * 60]: () => \"2 minutes\",\n    [1 * 60]: () => \"1 minute\",\n    30: () => \"30 seconds\",\n    15: ({ nextAthlete }) => `${nextAthlete}. Get ready.`,\n    10: ({ started }) => (started ? \"Change in 10\" : \"Start in 10\"),\n    5: () => \"Five\",\n    2: () => \"Two\",\n    1: () => \"One\",\n    0: ({ nextAthlete, started }) => (started ? `Change to ${nextAthlete}` : \"Let's go\"),\n    skip: ({ nextAthlete }) => `Go ${nextAthlete}!`,\n};\n\nexport function speakCommand(command: string, args: Args) {\n    if (voiceCommands[command]) {\n        speak(voiceCommands[command](args));\n    }\n}\n\nexport function speak(text: string) {\n    const msg = new SpeechSynthesisUtterance();\n    msg.text = text;\n    msg.lang = \"en-US\";\n\n    window.speechSynthesis.cancel();\n    window.speechSynthesis.speak(msg);\n}\n","export function secondsToString(fullTimeInSeconds: number) {\n\n    const minutes = Math.floor(fullTimeInSeconds / 60);\n    const seconds = Math.floor(fullTimeInSeconds - minutes * 60);\n\n    if (minutes === 0) {\n        return `${seconds}s`\n    }\n\n    return `${minutes}:${seconds.toString().padStart(2, \"0\")}min`;\n}\n","import { useEffect, useRef } from \"react\";\n\nconst isSupported = \"wakeLock\" in navigator;\n\nexport function useWakeLock(active: boolean) {\n    const wakelockRef = useRef<WakeLock | null>(null);\n\n    useEffect(() => {\n        if (!isSupported) {\n            return;\n        }\n\n        if (!active) {\n            return;\n        }\n\n        const release = async () => {\n            await wakelockRef.current?.release();\n            wakelockRef.current = null;\n        };\n\n        const request = async () => {\n            if (document.visibilityState !== \"visible\") {\n                return;\n            }\n\n            try {\n                await release();\n                wakelockRef.current = await navigator.wakeLock.request(\"screen\");\n            } catch {}\n        };\n\n        request();\n        document.addEventListener(\"visibilitychange\", request);\n\n        return () => {\n            release();\n            document.removeEventListener(\"visibilitychange\", request);\n        };\n    }, [active]);\n}\n","import { faCopy } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useRef, useState } from \"react\";\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\ninterface Props {\n    command: string;\n}\n\nexport function CopyButton({ command }: Props) {\n    const [copied, setCopied] = useState(false);\n    const copiedTimeout = useRef<number | undefined>(undefined);\n\n    const copyCommand = () => {\n        navigator.clipboard.writeText(command);\n\n        if (copiedTimeout.current) {\n            clearTimeout(copiedTimeout.current);\n            copiedTimeout.current = undefined;\n        }\n        setCopied(true);\n        copiedTimeout.current = (setTimeout(() => setCopied(false), 5_000) as unknown) as number;\n    };\n\n    return (\n        <OverlayTrigger\n            placement=\"right\"\n            overlay={<Tooltip id=\"tooltip-copy-athletes\">{copied ? \"Copied!\" : \"Copy Discord Bot command\"}</Tooltip>}\n        >\n            <Button variant=\"outline-link\" size=\"sm\" className=\"m-0 p-0 border-0\" onClick={copyCommand}>\n                <FontAwesomeIcon icon={faCopy} />\n            </Button>\n        </OverlayTrigger>\n    );\n}\n","import { faSkullCrossbones, faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, ButtonGroup, Col, Form, InputGroup, Row, ToggleButton } from \"react-bootstrap\";\nimport { DEFAULT_ATHLETE_NAMES, DEFAULT_TIME_PER_ATHLETE } from \"../common/constants\";\nimport { Athlete, State } from \"../types\";\nimport { CopyButton } from \"./CopyButton\";\n\ninterface Props {\n    athletes: Athlete[];\n    onChange: (athletes: Athlete[]) => void;\n    state: State;\n}\n\nexport function AthletesSettings({ athletes, onChange, state }: Props) {\n    const discordCommand = `!t config athletes ${athletes\n        .map((athlete) => `${athlete.text.trim().replaceAll(\" \", \"_\").replaceAll(\" \", \"_\")}:${athlete.time}`)\n        .join(\" \")}`;\n\n    const getBackgroundColor = (athleteIndex: number) => {\n        if (state === \"stopped\") {\n            return \"#fff\";\n        }\n\n        if (!athletes[athleteIndex].enabled) {\n            return \"#6c757d80\";\n        }\n\n        return \"#fff\";\n    };\n\n    return (\n        <>\n            <h2 className=\"mb-3\">\n                Athletes <CopyButton command={discordCommand} />\n            </h2>\n\n            {athletes.map((athlete, athleteIndex) => (\n                <Form.Group key={athleteIndex} as={Row} controlId={`athlete-${athleteIndex}`}>\n                    <Col sm={12}>\n                        <InputGroup>\n                            <Form.Control\n                                style={{ background: getBackgroundColor(athleteIndex) }}\n                                type=\"text\"\n                                placeholder=\"Name\"\n                                value={athlete.text}\n                                onChange={(e) =>\n                                    onChange(\n                                        athletes.map((a, ai) => (ai === athleteIndex ? { ...a, text: e.target.value } : a))\n                                    )\n                                }\n                            />\n                            <Form.Control\n                                style={{ background: getBackgroundColor(athleteIndex) }}\n                                type=\"number\"\n                                placeholder=\"Time (in seconds)\"\n                                min={5}\n                                step={5}\n                                value={athlete.time}\n                                onChange={(e) =>\n                                    onChange(\n                                        athletes.map((a, ai) => (ai === athleteIndex ? { ...a, time: +e.target.value } : a))\n                                    )\n                                }\n                            />\n                            {state !== \"stopped\" && (\n                                <ButtonGroup toggle as={InputGroup.Append}>\n                                    <ToggleButton\n                                        variant=\"outline-secondary\"\n                                        type=\"checkbox\"\n                                        name={`athlete-${athleteIndex}-enabled`}\n                                        checked={!athlete.enabled}\n                                        disabled={athlete.enabled && athletes.filter((a) => a.enabled).length === 1}\n                                        value={athlete.text}\n                                        onChange={(e) =>\n                                            onChange(\n                                                athletes.map((a, ai) =>\n                                                    ai === athleteIndex ? { ...a, enabled: !e.target.checked } : a\n                                                )\n                                            )\n                                        }\n                                    >\n                                        <FontAwesomeIcon icon={faSkullCrossbones} />\n                                    </ToggleButton>\n                                </ButtonGroup>\n                            )}\n                            {state === \"stopped\" && (\n                                <InputGroup.Append>\n                                    <Button\n                                        variant=\"danger\"\n                                        disabled={athletes.length === 1}\n                                        onClick={() => onChange(athletes.filter((_, ai) => ai !== athleteIndex))}\n                                    >\n                                        <FontAwesomeIcon icon={faTrash} />\n                                    </Button>\n                                </InputGroup.Append>\n                            )}\n                        </InputGroup>\n                    </Col>\n                </Form.Group>\n            ))}\n\n            {state === \"stopped\" && (\n                <Button\n                    variant=\"light\"\n                    block\n                    onClick={() => {\n                        onChange([\n                            ...athletes,\n                            {\n                                text: DEFAULT_ATHLETE_NAMES[athletes.length] ?? \"\",\n                                time: DEFAULT_TIME_PER_ATHLETE,\n                                enabled: true,\n                            },\n                        ]);\n                    }}\n                >\n                    <FontAwesomeIcon icon={faPlus} /> Add athlete\n                </Button>\n            )}\n        </>\n    );\n}\n","import { faClock } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport { secondsToString } from \"../common/util\";\n\ninterface Props {\n    timePassed: number;\n    totalTime: number;\n}\n\nexport function Countdown({ totalTime, timePassed }: Props) {\n    return (\n        <>\n            <h3 className=\"text-center display-6\">\n                <FontAwesomeIcon icon={faClock} /> {secondsToString(totalTime - timePassed)}\n            </h3>\n\n            <ProgressBar\n                style={{ transform: \"scaleX(-1)\", background: \"white\" }}\n                now={Math.floor(totalTime - timePassed)}\n                max={totalTime}\n            />\n        </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/discord.3372aeeb.svg\";","export default __webpack_public_path__ + \"static/media/discordMark.d2c3bfa7.svg\";","import { Alert, Col, Row } from \"react-bootstrap\";\nimport discordLogo from \"../assets/discord.svg\";\nimport discordMarkLogo from \"../assets/discordMark.svg\";\n\nexport function DiscordBot() {\n    return (\n        <Alert variant=\"info\">\n            <Alert.Heading>Discord Bot</Alert.Heading>\n            <Row>\n                <Col xs={12} sm={4} md={2}>\n                    <img src={discordLogo} alt=\"Discord Logo\" className=\"d-block d-sm-none\" />\n                    <img src={discordMarkLogo} alt=\"Discord Logo\" className=\"d-none d-sm-block\" />\n                </Col>\n                <Col xs={12} sm={8} md={10}>\n                    <p className=\"mt-2\">\n                        No need to run the Web App on a rider's computer and mess around with the audio setup. Just add the\n                        TTT-Timer Discord Bot to your server and type <code>!t help</code> for details on how to use it.\n                        After starting the timer, it will appear as a user within your call and coach you through the race.\n                    </p>\n\n                    <div className=\"d-flex justify-content-end\">\n                        <a\n                            className=\"btn btn-light\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href=\"https://andipaetzold.github.io/tttt-discord\"\n                        >\n                            Documentation\n                        </a>\n\n                        <a\n                            className=\"btn btn-primary ml-2\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href=\"https://discord.com/api/oauth2/authorize?client_id=806979974594560060&amp;permissions=3155968&amp;scope=bot\"\n                        >\n                            Install\n                        </a>\n                    </div>\n                </Col>\n            </Row>\n        </Alert>\n    );\n}\n","import { faGithub, faPaypal } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport function Footer() {\n    return (\n        <footer className=\"text-muted mt-4 mb-2 text-center\">\n            <p>\n                <small>\n                    Made with ♥ for{\" \"}\n                    <a href=\"https://www.wtrl.racing\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        WTRL\n                    </a>{\" \"}\n                    by{\" \"}\n                    <a href=\"mailto:tttt@andipaetzold.com\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        Andi P&auml;tzold\n                    </a>\n                </small>\n            </p>\n            <p>\n                <small>\n                    <a href=\"https://paypal.me/andipaetzold\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        <FontAwesomeIcon icon={faPaypal} /> Donate via PayPal\n                    </a>\n                </small>\n            </p>\n            <p>\n                <small>\n                    <a href=\"https://github.com/andipaetzold/tttt\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        <FontAwesomeIcon icon={faGithub} /> GitHub\n                    </a>\n                </small>\n            </p>\n        </footer>\n    );\n}\n","import { faBiking } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Navbar } from \"react-bootstrap\";\n\nexport function Header() {\n    return (\n        <Navbar bg=\"light\" className=\"mb-2\">\n            <Navbar.Brand className=\"mx-auto\">\n                <FontAwesomeIcon icon={faBiking} /> Team Time Trial Timer <FontAwesomeIcon icon={faBiking} />\n            </Navbar.Brand>\n        </Navbar>\n    );\n}\n","import {\n    faArrowRight,\n    faCompress,\n    faExpand,\n    faForward,\n    faPause,\n    faPlay,\n    faPlus,\n    faStop,\n    faVolumeMute,\n    faVolumeUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport useInterval from \"@use-it/interval\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, Card, Container, Form, Jumbotron } from \"react-bootstrap\";\nimport { useFullScreenHandle } from \"react-full-screen\";\nimport { loadConfig, saveConfig } from \"../common/config\";\nimport { speakCommand } from \"../common/speech\";\nimport { secondsToString } from \"../common/util\";\nimport { useWakeLock } from \"../hooks/useWakeLock\";\nimport { Round, State } from \"../types\";\nimport { AthletesSettings } from \"./AthletesSettings\";\nimport { CopyButton } from \"./CopyButton\";\nimport { Countdown } from \"./Countdown\";\nimport { DiscordBot } from \"./DiscordBot\";\nimport { Footer } from \"./Footer\";\nimport { Header } from \"./Header\";\n\nconst initialConfig = loadConfig();\n\nexport default function App() {\n    const [state, setState] = useState<State>(\"stopped\");\n\n    const {\n        node: fullscreenRef,\n        active: fullscreenActive,\n        enter: enterFullscreen,\n        exit: leaveFullscreen,\n    } = useFullScreenHandle();\n\n    useWakeLock(state === \"running\" || state === \"paused\");\n\n    const [startDelay, setStartDelay] = useState(initialConfig.startDelay);\n    const [speechEnabled, setSpeechEnabled] = useState(initialConfig.speechEnabled);\n    const [athletes, setAthletes] = useState(initialConfig.athletes);\n\n    const [round, setRound] = useState<Round | undefined>(undefined);\n\n    const getAthleteName = (athleteIndex: number) => {\n        if (athleteIndex === undefined) {\n            return \"\";\n        }\n\n        return athletes[athleteIndex].text || `Athlete ${athleteIndex + 1}`;\n    };\n\n    useEffect(() => {\n        saveConfig({ athletes, startDelay, speechEnabled });\n    }, [athletes, startDelay, speechEnabled]);\n\n    const nextAthlete = useMemo(() => {\n        const athletesWithIndex = athletes.map((a, ai) => ({ ...a, index: ai }));\n\n        if (round?.currentAthlete === undefined) {\n            return athletesWithIndex.find((a) => a.enabled)!.index;\n        }\n\n        return [...athletesWithIndex.slice(round.currentAthlete + 1), ...athletesWithIndex].filter((a) => a.enabled)[0]\n            .index;\n    }, [round, athletes]);\n\n    const speak = (command: string) => {\n        if (!speechEnabled) {\n            return;\n        }\n\n        speakCommand(command, {\n            nextAthlete: getAthleteName(nextAthlete),\n            started: round?.currentAthlete !== undefined,\n        });\n    };\n\n    const prevTimeRef = useRef<number | undefined>();\n    useInterval(() => {\n        const now = Date.now();\n        const timeDiff = (now - prevTimeRef.current!) / 1_000;\n        prevTimeRef.current = now;\n\n        if (state !== \"running\" || round === undefined) {\n            return;\n        }\n\n        let updatedRound: Round = {\n            ...round,\n            timePassed: round.timePassed + timeDiff,\n        };\n\n        if (Math.floor(round.timePassed) !== Math.floor(updatedRound.timePassed)) {\n            const remainingTime = updatedRound.totalTime - updatedRound.timePassed;\n            const remainingTimeInSeconds = Math.floor(Math.max(0, remainingTime));\n\n            speak(remainingTimeInSeconds.toString());\n\n            if (remainingTimeInSeconds === 0) {\n                updatedRound = {\n                    timePassed: -remainingTime,\n                    currentAthlete: nextAthlete,\n                    totalTime: athletes[nextAthlete].time,\n                };\n            }\n        }\n\n        setRound(updatedRound);\n    }, 500);\n\n    const handleSkip = () => {\n        speak(\"skip\");\n        setRound({\n            timePassed: 0,\n            currentAthlete: nextAthlete,\n            totalTime: athletes[nextAthlete].time,\n        });\n    };\n\n    const handleStart = () => {\n        const now = Date.now();\n        prevTimeRef.current = now;\n\n        setRound({\n            timePassed: 0,\n            totalTime: startDelay > 0 ? startDelay : athletes[0].time,\n            currentAthlete: startDelay > 0 ? undefined : nextAthlete,\n        });\n\n        setAthletes((athletes) => athletes.map((a) => ({ ...a, enabled: true })));\n\n        setState(\"running\");\n    };\n\n    const handleStop = () => {\n        setState(\"stopped\");\n        setAthletes((athletes) => athletes.map((a) => ({ ...a, enabled: true })));\n    };\n\n    const handlePause = () => {\n        setState(\"paused\");\n    };\n\n    const handleResume = () => {\n        setState(\"running\");\n    };\n\n    const handlePlus10 = () => {\n        if (!round) {\n            return;\n        }\n\n        setRound({\n            ...round,\n            totalTime: round.totalTime + 10,\n        });\n    };\n\n    return (\n        <>\n            <Header />\n\n            <Container>\n                <Jumbotron\n                    className=\"pt-4 mb-2 position-relative d-flex flex-column align-items-center justify-content-center\"\n                    ref={fullscreenRef}\n                >\n                    {state !== \"stopped\" && round !== undefined ? (\n                        <div className=\"w-100\">\n                            <h1 className=\"text-center display-2\">\n                                {round.currentAthlete === undefined ? \"Wait\" : getAthleteName(round.currentAthlete)}\n                            </h1>\n\n                            <h2 className=\"text-center display-5\">\n                                <FontAwesomeIcon icon={faArrowRight} /> {getAthleteName(nextAthlete)}\n                            </h2>\n\n                            <Countdown timePassed={round.timePassed} totalTime={round.totalTime} />\n\n                            <div className=\"mt-4 text-center\">\n                                {state === \"paused\" ? (\n                                    <Button variant=\"info\" className=\"mr-1\" onClick={handleResume}>\n                                        <FontAwesomeIcon icon={faPlay} /> Resume\n                                    </Button>\n                                ) : (\n                                    <Button variant=\"info\" className=\"mr-1\" onClick={handlePause}>\n                                        <FontAwesomeIcon icon={faPause} /> Pause\n                                    </Button>\n                                )}\n\n                                <Button variant=\"warning\" className=\"mr-1\" onClick={handleSkip}>\n                                    <FontAwesomeIcon icon={faForward} />{\" \"}\n                                    {round.currentAthlete === undefined ? \"Start now\" : \"Skip\"}\n                                </Button>\n\n                                {state === \"running\" && (\n                                    <Button variant=\"success\" onClick={handlePlus10}>\n                                        <FontAwesomeIcon icon={faPlus} /> 10s\n                                    </Button>\n                                )}\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"text-center\">\n                            <Button variant=\"primary\" onClick={handleStart} size=\"lg\">\n                                <FontAwesomeIcon icon={faPlay} /> Start{\" \"}\n                                {startDelay > 0 && `in ${secondsToString(startDelay)}`}\n                            </Button>\n                        </div>\n                    )}\n\n                    <div className=\"position-absolute\" style={{ right: 16, bottom: 16 }}>\n                        {state !== \"stopped\" && (\n                            <Button variant=\"danger\" size=\"sm\" onClick={handleStop}>\n                                <FontAwesomeIcon icon={faStop} /> Stop Timer\n                            </Button>\n                        )}\n\n                        {speechEnabled ? (\n                            <Button className=\"ml-2\" size=\"sm\" variant=\"secondary\" onClick={() => setSpeechEnabled(false)}>\n                                <FontAwesomeIcon icon={faVolumeUp} />\n                            </Button>\n                        ) : (\n                            <Button className=\"ml-2\" size=\"sm\" variant=\"danger\" onClick={() => setSpeechEnabled(true)}>\n                                <FontAwesomeIcon icon={faVolumeMute} />\n                            </Button>\n                        )}\n\n                        {fullscreenActive ? (\n                            <Button className=\"ml-2\" size=\"sm\" variant=\"danger\" onClick={leaveFullscreen}>\n                                <FontAwesomeIcon icon={faCompress} />\n                            </Button>\n                        ) : (\n                            <Button className=\"ml-2\" size=\"sm\" variant=\"secondary\" onClick={enterFullscreen}>\n                                <FontAwesomeIcon icon={faExpand} />\n                            </Button>\n                        )}\n                    </div>\n\n                    <div className=\"mt-5\" style={{ maxWidth: \"500px\" }}>\n                        <AthletesSettings athletes={athletes} onChange={setAthletes} state={state} />\n                    </div>\n                </Jumbotron>\n\n                <Card className=\"mb-2\">\n                    <Card.Body>\n                        <h3>Settings</h3>\n\n                        <Form.Group controlId=\"startDelay\">\n                            <Form.Label>\n                                Start Delay (in seconds) <CopyButton command={`!t config delay ${startDelay}`} />\n                            </Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                value={startDelay}\n                                onChange={(e) => setStartDelay(+e.target.value)}\n                                min={0}\n                                step={30}\n                                disabled={state !== \"stopped\"}\n                            />\n                        </Form.Group>\n                    </Card.Body>\n                </Card>\n\n                <DiscordBot />\n                <Footer />\n            </Container>\n        </>\n    );\n}\n","import \"./polyfills\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\n\nSentry.init({\n    dsn: \"https://51f308cc68f84d17a534fbd3e08610c9@o260685.ingest.sentry.io/5685762\",\n    integrations: [new Integrations.BrowserTracing()],\n    tracesSampleRate: 1.0,\n    enabled: process.env.NODE_ENV === \"production\",\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}