{"version":3,"sources":["common/config.js","common/speech.js","common/util.js","components/AthletesSettings.js","components/Footer.js","components/Header.js","components/VoiceSettings.js","components/App.js","hooks/useVoices.js","index.js"],"names":["LOCAL_STORAGE_KEY","DEFAULT_ATHLETES","map","athleteName","text","enabled","time","voiceCommands","voiceChanged","start","15","nextAthlete","10","5","2","1","0","speakCommand","command","args","voice","msg","SpeechSynthesisUtterance","lang","window","speechSynthesis","cancel","speak","toSeconds","ms","Math","round","AthletesSettings","athletes","onChange","athlete","athleteIndex","Form","Group","as","Row","controlId","Col","sm","InputGroup","Control","style","background","type","placeholder","value","e","a","ai","target","Append","ButtonGroup","toggle","ToggleButton","variant","name","checked","disabled","filter","length","Footer","className","href","rel","Header","Navbar","bg","Brand","VoiceSettings","voices","Label","newVoiceURI","newVoice","find","v","voiceURI","Text","Button","padding","fontSize","border","onClick","undefined","setTimeout","location","reload","initialConfig","rawConfig","localStorage","getItem","config","JSON","parse","speechEnabled","startDelay","loadConfig","App","useState","running","setRunning","setStartDelay","setSpeechEnabled","setAthletes","getAthleteName","setVoices","updateVoices","getVoices","useEffect","onvoiceschanged","startsWith","useVoices","setVoiceURI","timeUntilNextChange","setTimeUntilNextChange","currentAthlete","setCurrentAthlete","setItem","stringify","useMemo","athletesWithIndex","index","slice","startTimeRef","useRef","prevTimeRef","useInterval","changeTime","now","Date","secondsSinceStart","current","max","Container","Jumbotron","ProgressBar","transform","size","Card","Body","min","Check","label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.830abab0.chunk.js","sourcesContent":["const LOCAL_STORAGE_KEY = \"config\";\n\nconst DEFAULT_START_DELAY = 0;\nconst DEFAULT_TIME_PER_ATHLETE = 30;\nconst DEFAULT_ATHLETE_NAMES = [\n  \"Amelia\",\n  \"Bowie\",\n  \"Coco\",\n  \"Dan\",\n  \"Emma\",\n  \"Finn\",\n];\nconst DEFAULT_SPEECH_ENABLED = false;\n\nconst DEFAULT_ATHLETES = DEFAULT_ATHLETE_NAMES.map((athleteName) => ({\n  text: athleteName,\n  enabled: true,\n  time: DEFAULT_TIME_PER_ATHLETE,\n}));\n\nexport function loadConfig() {\n  try {\n    const rawConfig = localStorage.getItem(LOCAL_STORAGE_KEY);\n    const config = JSON.parse(rawConfig);\n\n    return {\n      athletes: config.athletes || DEFAULT_ATHLETES,\n      speechEnabled: config.speechEnabled,\n      startDelay: config.startDelay,\n      voice: config.voice,\n    };\n  } catch {\n    return {\n      athletes: DEFAULT_ATHLETES,\n      speechEnabled: DEFAULT_SPEECH_ENABLED,\n      startDelay: DEFAULT_START_DELAY,\n    };\n  }\n}\n\nexport function saveConfig(config) {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(config));\n}\n","const voiceCommands = {\n  voiceChanged: () => \"Go faster!\",\n  start: () => \"Start\",\n  15: ({ nextAthlete }) => `${nextAthlete}. Get ready.`,\n  10: () => \"Change in 10\",\n  5: () => \"Five\",\n  2: () => \"Two\",\n  1: () => \"One\",\n  0: ({ nextAthlete }) => `Change to ${nextAthlete}`,\n};\n\nexport function speakCommand(command, args, voice) {\n  if (voiceCommands[command]) {\n    speak(voiceCommands[command](args), voice);\n  }\n}\n\nexport function speak(text, voice) {\n  const msg = new SpeechSynthesisUtterance();\n  msg.text = text;\n  msg.lang = \"en-US\";\n  msg.voice = voice;\n\n  window.speechSynthesis.cancel();\n  window.speechSynthesis.speak(msg);\n}\n","export function toSeconds(ms) {\n  return Math.round(ms / 1_000);\n}\n","import {\n  ButtonGroup,\n  Col,\n  Form,\n  InputGroup,\n  Row,\n  ToggleButton,\n} from \"react-bootstrap\";\n\nexport function AthletesSettings({ athletes, onChange }) {\n  return (\n    <>\n      <h3>Athletes</h3>\n\n      {athletes.map((athlete, athleteIndex) => (\n        <Form.Group\n          key={athleteIndex}\n          as={Row}\n          controlId={`athlete-${athleteIndex}`}\n        >\n          <Col sm={12}>\n            <InputGroup>\n              <Form.Control\n                style={{ background: !athlete.enabled && \"#6c757d80\" }}\n                type=\"text\"\n                placeholder={`Name`}\n                value={athlete.text}\n                onChange={(e) =>\n                  onChange(\n                    athletes.map((a, ai) =>\n                      ai === athleteIndex ? { ...a, text: e.target.value } : a\n                    )\n                  )\n                }\n              />\n              <Form.Control\n                style={{ background: !athlete.enabled && \"#6c757d80\" }}\n                type=\"number\"\n                placeholder={`Time (in seconds)`}\n                value={athlete.time}\n                onChange={(e) =>\n                  onChange(\n                    athletes.map((a, ai) =>\n                      ai === athleteIndex ? { ...a, time: +e.target.value } : a\n                    )\n                  )\n                }\n              />\n              <InputGroup.Append>\n                <ButtonGroup toggle>\n                  <ToggleButton\n                    variant=\"outline-secondary\"\n                    type=\"checkbox\"\n                    name={`athlete-${athleteIndex}-enabled`}\n                    checked={!athlete.enabled}\n                    disabled={\n                      athlete.enabled &&\n                      athletes.filter((a) => a.enabled).length === 1\n                    }\n                    onChange={(e) =>\n                      onChange(\n                        athletes.map((a, ai) =>\n                          ai === athleteIndex\n                            ? { ...a, enabled: !e.target.checked }\n                            : a\n                        )\n                      )\n                    }\n                  >\n                    ☠️\n                  </ToggleButton>\n                </ButtonGroup>\n              </InputGroup.Append>\n            </InputGroup>\n          </Col>\n        </Form.Group>\n      ))}\n    </>\n  );\n}\n","export function Footer() {\n  return (\n    <footer className=\"text-muted mt-4 mb-2 text-center\">\n      <p>\n        <small>\n          Made with ♥ for{\" \"}\n          <a\n            href=\"https://www.wtrl.racing\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            WTRL\n          </a>{\" \"}\n          by{\" \"}\n          <a\n            href=\"https://zwiftpower.com/profile.php?z=1861132\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Andi P&auml;tzold\n          </a>\n        </small>\n      </p>\n      <p>\n        <small>\n          <a\n            href=\"paypal.me/andipaetzold\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Donate via PayPal\n          </a>\n        </small>\n      </p>\n      <p>\n        <small>\n          <a\n            href=\"https://github.com/andipaetzold/tttt\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            GitHub\n          </a>\n        </small>\n      </p>\n    </footer>\n  );\n}\n","import { Navbar } from \"react-bootstrap\";\n\nexport function Header() {\n  return (\n    <Navbar bg=\"light\" className=\"mb-2\">\n      <Navbar.Brand className=\"mx-auto\">Team Time Trial Timer</Navbar.Brand>\n    </Navbar>\n  );\n}\n","import { Button, Form } from \"react-bootstrap\";\nimport { speakCommand } from \"../common/speech\";\n\nexport function VoiceSettings({ voices, voice, onChange }) {\n  const handleChange = (e) => {\n    const newVoiceURI = e.target.value;\n    const newVoice = voices.find((v) => v.voiceURI === newVoiceURI);\n\n    if (!newVoice) {\n      return;\n    }\n\n    speakCommand(\"voiceChanged\", {}, newVoice);\n    onChange(newVoice);\n  };\n  return (\n    <Form.Group controlId=\"voice\">\n      <Form.Label>Voice</Form.Label>\n      <Form.Control\n        as=\"select\"\n        onChange={handleChange}\n        value={voice?.voiceURI}\n        disabled={voices.length === 0}\n      >\n        {voices.length > 0 ? (\n          voices.map((v) => (\n            <option key={v.voiceURI} value={v.voiceURI}>\n              {v.name}\n            </option>\n          ))\n        ) : (\n          <option key=\"default\">Default</option>\n        )}\n      </Form.Control>\n      <Form.Text>\n        If the voice output does not work anymore, click{\" \"}\n        <Button\n          style={{\n            padding: 0,\n            fontSize: \"100%\",\n            border: \"none\",\n          }}\n          variant=\"link\"\n          onClick={() => {\n            onChange(undefined);\n\n            // make sure the changes are saved to local storage\n            setTimeout(() => {\n              window.location.reload();\n            }, 0);\n          }}\n        >\n          here\n        </Button>{\" \"}\n        to reset the app and keep the default voice.\n      </Form.Text>\n    </Form.Group>\n  );\n}\n","import useInterval from \"@use-it/interval\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  Container,\n  Form,\n  Jumbotron,\n  ProgressBar,\n} from \"react-bootstrap\";\nimport { loadConfig, saveConfig } from \"../common/config\";\nimport { speakCommand } from \"../common/speech\";\nimport { toSeconds } from \"../common/util\";\nimport { useVoices } from \"../hooks/useVoices\";\nimport { AthletesSettings } from \"./AthletesSettings\";\nimport { Footer } from \"./Footer\";\nimport { Header } from \"./Header\";\nimport { VoiceSettings } from \"./VoiceSettings\";\n\nconst initialConfig = loadConfig();\n\nexport default function App() {\n  const [running, setRunning] = useState(false);\n\n  const [startDelay, setStartDelay] = useState(initialConfig.startDelay);\n  const [speechEnabled, setSpeechEnabled] = useState(\n    initialConfig.speechEnabled\n  );\n  const [athletes, setAthletes] = useState(initialConfig.athletes);\n\n  const getAthleteName = (athleteIndex) => {\n    if (athleteIndex === undefined) {\n      return \"\";\n    }\n\n    return athletes[athleteIndex].text || `Athlete ${athleteIndex + 1}`;\n  };\n\n  const voices = useVoices();\n  const [voiceURI, setVoiceURI] = useState(initialConfig.voice);\n  const voice = voices.find((v) => v.voiceURI === voiceURI);\n\n  const [timeUntilNextChange, setTimeUntilNextChange] = useState(0);\n  const [currentAthlete, setCurrentAthlete] = useState(undefined);\n\n  useEffect(() => {\n    saveConfig({ athletes, startDelay, speechEnabled, voice: voiceURI });\n  }, [athletes, startDelay, speechEnabled, voiceURI]);\n\n  const nextAthlete = useMemo(() => {\n    const athletesWithIndex = athletes.map((a, ai) => ({ ...a, index: ai }));\n\n    if (currentAthlete === undefined) {\n      return athletesWithIndex.find((a) => a.enabled).index;\n    }\n\n    return [\n      ...athletesWithIndex.slice(currentAthlete + 1),\n      ...athletesWithIndex,\n    ].filter((a) => a.enabled)[0].index;\n  }, [currentAthlete, athletes]);\n\n  const startTimeRef = useRef();\n  const prevTimeRef = useRef();\n\n  const speak = (command) => {\n    if (!speechEnabled) {\n      return;\n    }\n    speakCommand(command, { nextAthlete: getAthleteName(nextAthlete) }, voice);\n  };\n\n  const changeToNextAthlete = () => {\n    setCurrentAthlete(nextAthlete);\n    startTimeRef.current = Date.now();\n    setTimeUntilNextChange(athletes[nextAthlete].time);\n  };\n\n  useInterval(() => {\n    if (!running) {\n      return;\n    }\n\n    const changeTime =\n      currentAthlete === undefined ? startDelay : athletes[currentAthlete].time;\n\n    const now = Date.now();\n\n    const secondsSinceStart = toSeconds(now - startTimeRef.current);\n    const prevSecondsSinceStart = toSeconds(\n      prevTimeRef.current - startTimeRef.current\n    );\n\n    if (secondsSinceStart !== prevSecondsSinceStart) {\n      if (secondsSinceStart >= changeTime) {\n        speak(currentAthlete === undefined ? \"start\" : 0);\n        changeToNextAthlete();\n      } else {\n        speak(changeTime - secondsSinceStart);\n        setTimeUntilNextChange(Math.max(changeTime - secondsSinceStart, 0));\n      }\n    }\n\n    prevTimeRef.current = now;\n  }, 500);\n\n  const handleStart = () => {\n    const now = Date.now();\n\n    prevTimeRef.current = now;\n    startTimeRef.current = now;\n\n    setTimeUntilNextChange(startDelay > 0 ? startDelay : athletes[0].time);\n    setCurrentAthlete(startDelay > 0 ? undefined : nextAthlete);\n\n    setRunning(true);\n  };\n\n  const handleStop = () => {\n    setRunning(false);\n  };\n\n  return (\n    <>\n      <Header />\n\n      <Container>\n        <Jumbotron className=\"mb-2\">\n          {running && (\n            <>\n              <h1 className=\"text-center display-2\">\n                {currentAthlete === undefined\n                  ? \"Wait\"\n                  : getAthleteName(currentAthlete)}\n              </h1>\n\n              <h2 className=\"text-center display-5\">\n                🔜 {getAthleteName(nextAthlete)}\n              </h2>\n\n              <h3 className=\"text-center display-6\">\n                ⏱️ {timeUntilNextChange}s\n              </h3>\n              <ProgressBar\n                style={{ transform: \"scaleX(-1)\", background: \"white\" }}\n                now={timeUntilNextChange}\n                max={\n                  currentAthlete === undefined\n                    ? startDelay\n                    : athletes[currentAthlete].time\n                }\n              />\n            </>\n          )}\n\n          <div className=\"mt-4 text-center\">\n            {running ? (\n              <Button variant=\"danger\" onClick={handleStop}>\n                Stop\n              </Button>\n            ) : (\n              <Button variant=\"primary\" onClick={handleStart} size=\"lg\">\n                Start\n              </Button>\n            )}\n          </div>\n        </Jumbotron>\n\n        <Card className=\"mb-2\">\n          <Card.Body>\n            <AthletesSettings athletes={athletes} onChange={setAthletes} />\n\n            <h3>Settings</h3>\n            <Form.Group controlId=\"startDelay\">\n              <Form.Label>Start Delay (in seconds)</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={startDelay}\n                onChange={(e) => setStartDelay(+e.target.value)}\n                disabled={running}\n                min={0}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"speechEnabled\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Voice Output\"\n                checked={speechEnabled}\n                onChange={(e) => setSpeechEnabled(e.target.checked)}\n              />\n              <Form.Text>Voice Output is not supported on iOS</Form.Text>\n            </Form.Group>\n            <VoiceSettings\n              voices={voices}\n              voice={voice}\n              onChange={(v) => setVoiceURI(v?.voiceURI)}\n            />\n          </Card.Body>\n        </Card>\n\n        <Footer />\n      </Container>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useVoices() {\n  const [voices, setVoices] = useState([]);\n\n  const updateVoices = () => {\n    setVoices(window.speechSynthesis.getVoices());\n  };\n\n  useEffect(() => {\n    if (typeof window.speechSynthesis === \"undefined\") {\n      return;\n    }\n\n    updateVoices();\n    window.speechSynthesis.onvoiceschanged = updateVoices;\n    return () => (window.speechSynthesis.onvoiceschanged = undefined);\n  }, []);\n\n  return voices.filter((voice) => voice.lang.startsWith(\"en-\"));\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}