{"version":3,"sources":["speech.js","App.js","index.js"],"names":["voiceCommands","start","15","nextAthlete","10","5","2","1","0","speakCommand","command","args","text","msg","SpeechSynthesisUtterance","lang","speechSynthesis","speak","DEFAULT_ATHLETES","App","useState","startTime","setStartTime","running","setRunning","startDelay","setStartDelay","speechEnabled","setSpeechEnabled","map","athlete","enabled","time","athletes","setAthletes","timeUntilNextChange","setTimeUntilNextChange","undefined","currentAthlete","setCurrentAthlete","useMemo","athletesWithIndex","a","ai","index","find","slice","filter","prevTimeRef","useRef","useInterval","changeTime","now","Date","secondsSinceStart","toSeconds","prevSecondsSinceStart","current","Math","max","Navbar","bg","className","Container","Brand","Jumbotron","ProgressBar","style","transform","background","Button","variant","onClick","size","Card","Body","athleteIndex","Form","Group","as","Row","controlId","Col","sm","InputGroup","Control","type","placeholder","value","onChange","e","target","Append","ButtonGroup","toggle","ToggleButton","name","checked","disabled","length","Label","min","Check","label","rel","href","ms","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAAMA,EAAgB,CACpBC,MAAO,iBAAM,SACbC,GAAI,gBAAGC,EAAH,EAAGA,YAAH,gBAAwBA,EAAxB,iBACJC,GAAI,iBAAM,gBACVC,EAAG,iBAAM,QACTC,EAAG,iBAAM,OACTC,EAAG,iBAAM,OACTC,EAAG,gBAAGL,EAAH,EAAGA,YAAH,0BAAkCA,KAGhC,SAASM,EAAaC,EAASC,GAChCX,EAAcU,IAKb,SAAeE,GACpB,IAAMC,EAAM,IAAIC,yBAChBD,EAAID,KAAOA,EACXC,EAAIE,KAAO,QAEXC,gBAAgBC,MAAMJ,GATpBI,CAAMjB,EAAcU,GAASC,ICMjC,IAEMO,EAAmB,CAAC,SAAU,QAAS,OAAQ,MAAO,OAAQ,QAGrD,SAASC,IAAO,IAAD,EACMC,mBAAS,GADf,mBACrBC,EADqB,KACVC,EADU,OAEEF,oBAAS,GAFX,mBAErBG,EAFqB,KAEZC,EAFY,OAIQJ,mBATV,GAKE,mBAIrBK,EAJqB,KAITC,EAJS,OAMcN,mBARb,OAED,mBAMrBO,EANqB,KAMNC,EANM,OAOIR,mBAC9BF,EAAiBW,KAAI,SAACC,GAAD,MAAc,CACjClB,KAAMkB,EACNC,SAAS,EACTC,KAf2B,QAIH,mBAOrBC,EAPqB,KAOXC,EAPW,OAe0Bd,mBAAS,GAfnC,mBAerBe,EAfqB,KAeAC,EAfA,OAgBgBhB,wBAASiB,GAhBzB,mBAgBrBC,EAhBqB,KAgBLC,EAhBK,KAkBtBpC,EAAcqC,mBAAQ,WAC1B,IAAMC,EAAoBR,EAASJ,KAAI,SAACa,EAAGC,GAAJ,mBAAC,eAAgBD,GAAjB,IAAoBE,MAAOD,OAElE,YAAuBN,IAAnBC,EACKG,EAAkBI,MAAK,SAACH,GAAD,OAAOA,EAAEX,WAASa,MAG3C,sBACFH,EAAkBK,MAAMR,EAAiB,IADvC,YAEFG,IACHM,QAAO,SAACL,GAAD,OAAOA,EAAEX,WAAS,GAAGa,QAC7B,CAACN,EAAgBL,IAEde,EAAcC,mBAEpBC,KAAY,WACV,GAAK3B,EAAL,CAIA,IAAM4B,OACed,IAAnBC,EAA+Bb,EAAaQ,EAASK,GAAgBN,KAEjEoB,EAAMC,KAAKD,MAEXE,EAAoBC,EAAUH,EAAM/B,GACpCmC,EAAwBD,EAAUP,EAAYS,QAAUpC,GAE9De,EAAuBsB,KAAKC,IAAIR,EAAaG,EAAmB,IAE5DA,IAAsBE,IACpBF,GAAqBH,GACnBxB,SACqBU,IAAnBC,EACF7B,EAAa,SAEbA,EAAa,EAAG,CAAEN,YAAa8B,EAAS9B,GAAaS,QAIzD2B,EAAkBpC,GAClBmB,EAAa8B,IAETzB,GACFlB,EAAa0C,EAAaG,EAAmB,CAC3CnD,YAAa8B,EAAS9B,GAAaS,QAM3CoC,EAAYS,QAAUL,KACrB,KAgBH,OACE,qCACE,cAACQ,EAAA,EAAD,CAAQC,GAAG,QAAQC,UAAU,OAA7B,SACE,cAACC,EAAA,EAAD,UACE,cAACH,EAAA,EAAOI,MAAR,wCAIJ,eAACD,EAAA,EAAD,WACE,eAACE,EAAA,EAAD,CAAWH,UAAU,OAArB,UACGvC,GACC,qCACE,oBAAIuC,UAAU,wBAAd,cACsBzB,IAAnBC,EACG,OACAL,EAASK,GAAgB1B,OAG/B,qBAAIkD,UAAU,wBAAd,0BACM7B,EAAS9B,GAAaS,QAG5B,qBAAIkD,UAAU,wBAAd,0BACM3B,EADN,OAGA,cAAC+B,EAAA,EAAD,CACEC,MAAO,CAAEC,UAAW,aAAcC,WAAY,SAC9CjB,IAAKjB,EACLwB,SACqBtB,IAAnBC,EACIb,EACAQ,EAASK,GAAgBN,UAMrC,qBAAK8B,UAAU,mBAAf,SACGvC,EACC,cAAC+C,EAAA,EAAD,CAAQC,QAAQ,SAASC,QA3ClB,WACjBhD,GAAW,IA0CD,kBAIA,cAAC8C,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAzDlB,WAClB,IAAMpB,EAAMC,KAAKD,MACjB9B,EAAa8B,GACbJ,EAAYS,QAAUL,EACtBhB,EAAuBX,EAAa,EAAIA,EAAaQ,EAAS,GAAGD,MACjEO,EAAkBd,EAAa,OAAIY,EAAY,GAE/Cb,GAAW,IAkD+CiD,KAAK,KAArD,wBAON,cAACC,EAAA,EAAD,CAAMZ,UAAU,OAAhB,SACE,eAACY,EAAA,EAAKC,KAAN,WACE,0CAEC1C,EAASJ,KAAI,SAACC,EAAS8C,GAAV,OACZ,cAACC,EAAA,EAAKC,MAAN,CAEEC,GAAIC,IACJC,UAAS,kBAAaL,GAHxB,SAKE,cAACM,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,eAACC,EAAA,EAAD,WACE,cAACP,EAAA,EAAKQ,QAAN,CACElB,MAAO,CAAEE,YAAavC,EAAQC,SAAW,aACzCuD,KAAK,OACLC,YAAW,OACXC,MAAO1D,EAAQlB,KACf6E,SAAU,SAACC,GAAD,OACRxD,EACED,EAASJ,KAAI,SAACa,EAAGC,GAAJ,OACXA,IAAOiC,EAAP,2BACSlC,GADT,IACY9B,KAAM8E,EAAEC,OAAOH,QACvB9C,SAKZ,cAACmC,EAAA,EAAKQ,QAAN,CACElB,MAAO,CAAEE,YAAavC,EAAQC,SAAW,aACzCuD,KAAK,SACLC,YAAW,oBACXC,MAAO1D,EAAQE,KACfyD,SAAU,SAACC,GAAD,OACRxD,EACED,EAASJ,KAAI,SAACa,EAAGC,GAAJ,OACXA,IAAOiC,EAAP,2BACSlC,GADT,IACYV,MAAO0D,EAAEC,OAAOH,QACxB9C,SAKZ,cAAC0C,EAAA,EAAWQ,OAAZ,UACE,cAACC,EAAA,EAAD,CAAaC,QAAM,EAAnB,SACE,cAACC,EAAA,EAAD,CACExB,QAAQ,oBACRe,KAAK,WACLU,KAAI,kBAAapB,EAAb,YACJqB,SAAUnE,EAAQC,QAClBmE,SACEpE,EAAQC,SACqC,IAA7CE,EAASc,QAAO,SAACL,GAAD,OAAOA,EAAEX,WAASoE,OAEpCV,SAAU,SAACC,GAAD,OACRxD,EACED,EAASJ,KAAI,SAACa,EAAGC,GAAJ,OACXA,IAAOiC,EAAP,2BACSlC,GADT,IACYX,SAAU2D,EAAEC,OAAOM,UAC3BvD,OAdZ,oCAtCHkC,MAkET,0CACA,eAACC,EAAA,EAAKC,MAAN,CAAYG,UAAU,aAAtB,UACE,cAACJ,EAAA,EAAKuB,MAAN,uCACA,cAACvB,EAAA,EAAKQ,QAAN,CACEC,KAAK,SACLE,MAAO/D,EACPgE,SAAU,SAACC,GAAD,OAAOhE,GAAegE,EAAEC,OAAOH,QACzCU,SAAU3E,EACV8E,IAAK,OAGT,cAACxB,EAAA,EAAKC,MAAN,CAAYG,UAAU,gBAAtB,SACE,cAACJ,EAAA,EAAKyB,MAAN,CACEhB,KAAK,WACLiB,MAAM,eACNN,QAAStE,EACT8D,SAAU,SAACC,GAAD,OAAO9D,EAAiB8D,EAAEC,OAAOM,mBAMnD,yBAAQnC,UAAU,kBAAkB0C,IAAI,sBAAxC,UACE,mBAAGC,KAAK,uCAAR,oBADF,mCASR,SAASlD,EAAUmD,GACjB,OAAOhD,KAAKiD,MAAMD,EAAK,K,MClQzBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3F,EAAD,MAEF4F,SAASC,eAAe,W","file":"static/js/main.d2bb7f03.chunk.js","sourcesContent":["const voiceCommands = {\n  start: () => \"Start\",\n  15: ({ nextAthlete }) => `${nextAthlete}. Get ready.`,\n  10: () => \"Change in 10\",\n  5: () => \"Five\",\n  2: () => \"Two\",\n  1: () => \"One\",\n  0: ({ nextAthlete }) => `Change to ${nextAthlete}`,\n};\n\nexport function speakCommand(command, args) {\n  if (voiceCommands[command]) {\n    speak(voiceCommands[command](args));\n  }\n}\n\nexport function speak(text) {\n  const msg = new SpeechSynthesisUtterance();\n  msg.text = text;\n  msg.lang = \"en-US\";\n\n  speechSynthesis.speak(msg);\n}\n","import useInterval from \"@use-it/interval\";\nimport { useMemo, useRef, useState } from \"react\";\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  Col,\n  Container,\n  Form,\n  InputGroup,\n  Jumbotron,\n  Navbar,\n  ProgressBar,\n  Row,\n  ToggleButton\n} from \"react-bootstrap\";\nimport { speakCommand } from \"./speech\";\n\nconst DEFAULT_START_DELAY = 0;\nconst DEFAULT_TIME_PER_ATHLETE = 30;\nconst DEFAULT_ATHLETES = [\"Amelia\", \"Bowie\", \"Coco\", \"Dan\", \"Emma\", \"Finn\"];\nconst DEFAULT_SPEECH_ENABLED = false;\n\nexport default function App() {\n  const [startTime, setStartTime] = useState(0);\n  const [running, setRunning] = useState(false);\n\n  const [startDelay, setStartDelay] = useState(DEFAULT_START_DELAY);\n\n  const [speechEnabled, setSpeechEnabled] = useState(DEFAULT_SPEECH_ENABLED);\n  const [athletes, setAthletes] = useState(\n    DEFAULT_ATHLETES.map((athlete) => ({\n      text: athlete,\n      enabled: true,\n      time: DEFAULT_TIME_PER_ATHLETE,\n    }))\n  );\n\n  const [timeUntilNextChange, setTimeUntilNextChange] = useState(0);\n  const [currentAthlete, setCurrentAthlete] = useState(undefined);\n\n  const nextAthlete = useMemo(() => {\n    const athletesWithIndex = athletes.map((a, ai) => ({ ...a, index: ai }));\n\n    if (currentAthlete === undefined) {\n      return athletesWithIndex.find((a) => a.enabled).index;\n    }\n\n    return [\n      ...athletesWithIndex.slice(currentAthlete + 1),\n      ...athletesWithIndex,\n    ].filter((a) => a.enabled)[0].index;\n  }, [currentAthlete, athletes]);\n\n  const prevTimeRef = useRef();\n\n  useInterval(() => {\n    if (!running) {\n      return;\n    }\n\n    const changeTime =\n      currentAthlete === undefined ? startDelay : athletes[currentAthlete].time;\n\n    const now = Date.now();\n\n    const secondsSinceStart = toSeconds(now - startTime);\n    const prevSecondsSinceStart = toSeconds(prevTimeRef.current - startTime);\n\n    setTimeUntilNextChange(Math.max(changeTime - secondsSinceStart, 0));\n\n    if (secondsSinceStart !== prevSecondsSinceStart) {\n      if (secondsSinceStart >= changeTime) {\n        if (speechEnabled) {\n          if (currentAthlete === undefined) {\n            speakCommand(\"start\");\n          } else {\n            speakCommand(0, { nextAthlete: athletes[nextAthlete].text });\n          }\n        }\n\n        setCurrentAthlete(nextAthlete);\n        setStartTime(now);\n      } else {\n        if (speechEnabled) {\n          speakCommand(changeTime - secondsSinceStart, {\n            nextAthlete: athletes[nextAthlete].text,\n          });\n        }\n      }\n    }\n\n    prevTimeRef.current = now;\n  }, 500);\n\n  const handleStart = () => {\n    const now = Date.now();\n    setStartTime(now);\n    prevTimeRef.current = now;\n    setTimeUntilNextChange(startDelay > 0 ? startDelay : athletes[0].time);\n    setCurrentAthlete(startDelay > 0 ? undefined : 0);\n\n    setRunning(true);\n  };\n\n  const handleStop = () => {\n    setRunning(false);\n  };\n\n  return (\n    <>\n      <Navbar bg=\"light\" className=\"mb-2\">\n        <Container>\n          <Navbar.Brand>Team Time Trial Timer</Navbar.Brand>\n        </Container>\n      </Navbar>\n\n      <Container>\n        <Jumbotron className=\"mb-2\">\n          {running && (\n            <>\n              <h1 className=\"text-center display-2\">\n                {currentAthlete === undefined\n                  ? \"Wait\"\n                  : athletes[currentAthlete].text}\n              </h1>\n\n              <h2 className=\"text-center display-5\">\n                üîú {athletes[nextAthlete].text}\n              </h2>\n\n              <h3 className=\"text-center display-6\">\n                ‚è±Ô∏è {timeUntilNextChange}s\n              </h3>\n              <ProgressBar\n                style={{ transform: \"scaleX(-1)\", background: \"white\" }}\n                now={timeUntilNextChange}\n                max={\n                  currentAthlete === undefined\n                    ? startDelay\n                    : athletes[currentAthlete].time\n                }\n              />\n            </>\n          )}\n\n          <div className=\"mt-4 text-center\">\n            {running ? (\n              <Button variant=\"danger\" onClick={handleStop}>\n                Stop\n              </Button>\n            ) : (\n              <Button variant=\"primary\" onClick={handleStart} size=\"lg\">\n                Start\n              </Button>\n            )}\n          </div>\n        </Jumbotron>\n\n        <Card className=\"mb-2\">\n          <Card.Body>\n            <h3>Athletes</h3>\n\n            {athletes.map((athlete, athleteIndex) => (\n              <Form.Group\n                key={athleteIndex}\n                as={Row}\n                controlId={`athlete-${athleteIndex}`}\n              >\n                <Col sm={12}>\n                  <InputGroup>\n                    <Form.Control\n                      style={{ background: !athlete.enabled && \"#6c757d80\" }}\n                      type=\"text\"\n                      placeholder={`Name`}\n                      value={athlete.text}\n                      onChange={(e) =>\n                        setAthletes(\n                          athletes.map((a, ai) =>\n                            ai === athleteIndex\n                              ? { ...a, text: e.target.value }\n                              : a\n                          )\n                        )\n                      }\n                    />\n                    <Form.Control\n                      style={{ background: !athlete.enabled && \"#6c757d80\" }}\n                      type=\"number\"\n                      placeholder={`Time (in seconds)`}\n                      value={athlete.time}\n                      onChange={(e) =>\n                        setAthletes(\n                          athletes.map((a, ai) =>\n                            ai === athleteIndex\n                              ? { ...a, time: +e.target.value }\n                              : a\n                          )\n                        )\n                      }\n                    />\n                    <InputGroup.Append>\n                      <ButtonGroup toggle>\n                        <ToggleButton\n                          variant=\"outline-secondary\"\n                          type=\"checkbox\"\n                          name={`athlete-${athleteIndex}-enabled`}\n                          checked={!athlete.enabled}\n                          disabled={\n                            athlete.enabled &&\n                            athletes.filter((a) => a.enabled).length === 1\n                          }\n                          onChange={(e) =>\n                            setAthletes(\n                              athletes.map((a, ai) =>\n                                ai === athleteIndex\n                                  ? { ...a, enabled: !e.target.checked }\n                                  : a\n                              )\n                            )\n                          }\n                        >\n                          ‚ò†Ô∏è\n                        </ToggleButton>\n                      </ButtonGroup>\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Col>\n              </Form.Group>\n            ))}\n\n            <h3>Settings</h3>\n            <Form.Group controlId=\"startDelay\">\n              <Form.Label>Start Delay (in seconds)</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={startDelay}\n                onChange={(e) => setStartDelay(+e.target.value)}\n                disabled={running}\n                min={0}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"speechEnabled\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Voice Output\"\n                checked={speechEnabled}\n                onChange={(e) => setSpeechEnabled(e.target.checked)}\n              />\n            </Form.Group>\n          </Card.Body>\n        </Card>\n\n        <footer className=\"text-muted mb-2\" rel=\"noopener noreferrer\">\n          <a href=\"https://github.com/andipaetzold/tttt\">GitHub</a> | &copy;\n          Andi P&auml;tzold\n        </footer>\n      </Container>\n    </>\n  );\n}\n\nfunction toSeconds(ms) {\n  return Math.round(ms / 1_000);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}