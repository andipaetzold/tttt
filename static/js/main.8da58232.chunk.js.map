{"version":3,"sources":["speech.js","config.js","App.js","index.js"],"names":["voiceCommands","start","15","nextAthlete","10","5","2","1","0","speakCommand","command","args","text","msg","SpeechSynthesisUtterance","lang","speechSynthesis","speak","LOCAL_STORAGE_KEY","DEFAULT_ATHLETES","map","athleteName","enabled","time","initialConfig","rawConfig","localStorage","getItem","config","JSON","parse","athletes","speechEnabled","startDelay","loadConfig","App","useState","startTime","setStartTime","running","setRunning","setStartDelay","setSpeechEnabled","setAthletes","timeUntilNextChange","setTimeUntilNextChange","undefined","currentAthlete","setCurrentAthlete","useEffect","setItem","stringify","useMemo","athletesWithIndex","a","ai","index","find","slice","filter","prevTimeRef","useRef","useInterval","changeTime","now","Date","secondsSinceStart","toSeconds","prevSecondsSinceStart","current","Math","max","Navbar","bg","className","Container","Brand","Jumbotron","ProgressBar","style","transform","background","Button","variant","onClick","size","Card","Body","athlete","athleteIndex","Form","Group","as","Row","controlId","Col","sm","InputGroup","Control","type","placeholder","value","onChange","e","target","Append","ButtonGroup","toggle","ToggleButton","name","checked","disabled","length","Label","min","Check","label","rel","href","ms","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8da58232.chunk.js","sourcesContent":["const voiceCommands = {\n  start: () => \"Start\",\n  15: ({ nextAthlete }) => `${nextAthlete}. Get ready.`,\n  10: () => \"Change in 10\",\n  5: () => \"Five\",\n  2: () => \"Two\",\n  1: () => \"One\",\n  0: ({ nextAthlete }) => `Change to ${nextAthlete}`,\n};\n\nexport function speakCommand(command, args) {\n  if (voiceCommands[command]) {\n    speak(voiceCommands[command](args));\n  }\n}\n\nexport function speak(text) {\n  const msg = new SpeechSynthesisUtterance();\n  msg.text = text;\n  msg.lang = \"en-US\";\n\n  speechSynthesis.speak(msg);\n}\n","const LOCAL_STORAGE_KEY = \"config\";\n\nconst DEFAULT_START_DELAY = 0;\nconst DEFAULT_TIME_PER_ATHLETE = 30;\nconst DEFAULT_ATHLETE_NAMES = [\n  \"Amelia\",\n  \"Bowie\",\n  \"Coco\",\n  \"Dan\",\n  \"Emma\",\n  \"Finn\",\n];\nconst DEFAULT_SPEECH_ENABLED = false;\n\nconst DEFAULT_ATHLETES = DEFAULT_ATHLETE_NAMES.map((athleteName) => ({\n  text: athleteName,\n  enabled: true,\n  time: DEFAULT_TIME_PER_ATHLETE,\n}));\n\nexport function loadConfig() {\n  try {\n    const rawConfig = localStorage.getItem(LOCAL_STORAGE_KEY);\n    const config = JSON.parse(rawConfig);\n\n    return {\n      athletes: config.athletes || DEFAULT_ATHLETES,\n      speechEnabled: config.speechEnabled,\n      startDelay: config.startDelay,\n    };\n  } catch {\n    return {\n      athletes: DEFAULT_ATHLETES,\n      speechEnabled: DEFAULT_SPEECH_ENABLED,\n      startDelay: DEFAULT_START_DELAY,\n    };\n  }\n}\n\nexport function saveConfig(config) {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(config));\n}\n","import useInterval from \"@use-it/interval\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  Col,\n  Container,\n  Form,\n  InputGroup,\n  Jumbotron,\n  Navbar,\n  ProgressBar,\n  Row,\n  ToggleButton,\n} from \"react-bootstrap\";\nimport { speakCommand } from \"./speech\";\nimport { loadConfig, saveConfig } from \"./config\";\n\nconst initialConfig = loadConfig();\n\nexport default function App() {\n  const [startTime, setStartTime] = useState(0);\n  const [running, setRunning] = useState(false);\n\n  const [startDelay, setStartDelay] = useState(initialConfig.startDelay);\n  const [speechEnabled, setSpeechEnabled] = useState(\n    initialConfig.speechEnabled\n  );\n  const [athletes, setAthletes] = useState(initialConfig.athletes);\n\n  const [timeUntilNextChange, setTimeUntilNextChange] = useState(0);\n  const [currentAthlete, setCurrentAthlete] = useState(undefined);\n\n  useEffect(() => {\n    saveConfig({ athletes, startDelay, speechEnabled });\n  }, [athletes, startDelay, speechEnabled]);\n\n  const nextAthlete = useMemo(() => {\n    const athletesWithIndex = athletes.map((a, ai) => ({ ...a, index: ai }));\n\n    if (currentAthlete === undefined) {\n      return athletesWithIndex.find((a) => a.enabled).index;\n    }\n\n    return [\n      ...athletesWithIndex.slice(currentAthlete + 1),\n      ...athletesWithIndex,\n    ].filter((a) => a.enabled)[0].index;\n  }, [currentAthlete, athletes]);\n\n  const prevTimeRef = useRef();\n\n  useInterval(() => {\n    if (!running) {\n      return;\n    }\n\n    const changeTime =\n      currentAthlete === undefined ? startDelay : athletes[currentAthlete].time;\n\n    const now = Date.now();\n\n    const secondsSinceStart = toSeconds(now - startTime);\n    const prevSecondsSinceStart = toSeconds(prevTimeRef.current - startTime);\n\n    setTimeUntilNextChange(Math.max(changeTime - secondsSinceStart, 0));\n\n    if (secondsSinceStart !== prevSecondsSinceStart) {\n      if (secondsSinceStart >= changeTime) {\n        if (speechEnabled) {\n          if (currentAthlete === undefined) {\n            speakCommand(\"start\");\n          } else {\n            speakCommand(0, { nextAthlete: athletes[nextAthlete].text });\n          }\n        }\n\n        setCurrentAthlete(nextAthlete);\n        setStartTime(now);\n      } else {\n        if (speechEnabled) {\n          speakCommand(changeTime - secondsSinceStart, {\n            nextAthlete: athletes[nextAthlete].text,\n          });\n        }\n      }\n    }\n\n    prevTimeRef.current = now;\n  }, 500);\n\n  const handleStart = () => {\n    const now = Date.now();\n    setStartTime(now);\n    prevTimeRef.current = now;\n    setTimeUntilNextChange(startDelay > 0 ? startDelay : athletes[0].time);\n    setCurrentAthlete(startDelay > 0 ? undefined : nextAthlete);\n\n    setRunning(true);\n  };\n\n  const handleStop = () => {\n    setRunning(false);\n  };\n\n  return (\n    <>\n      <Navbar bg=\"light\" className=\"mb-2\">\n        <Container>\n          <Navbar.Brand>Team Time Trial Timer</Navbar.Brand>\n        </Container>\n      </Navbar>\n\n      <Container>\n        <Jumbotron className=\"mb-2\">\n          {running && (\n            <>\n              <h1 className=\"text-center display-2\">\n                {currentAthlete === undefined\n                  ? \"Wait\"\n                  : athletes[currentAthlete].text}\n              </h1>\n\n              <h2 className=\"text-center display-5\">\n                🔜 {athletes[nextAthlete].text}\n              </h2>\n\n              <h3 className=\"text-center display-6\">\n                ⏱️ {timeUntilNextChange}s\n              </h3>\n              <ProgressBar\n                style={{ transform: \"scaleX(-1)\", background: \"white\" }}\n                now={timeUntilNextChange}\n                max={\n                  currentAthlete === undefined\n                    ? startDelay\n                    : athletes[currentAthlete].time\n                }\n              />\n            </>\n          )}\n\n          <div className=\"mt-4 text-center\">\n            {running ? (\n              <Button variant=\"danger\" onClick={handleStop}>\n                Stop\n              </Button>\n            ) : (\n              <Button variant=\"primary\" onClick={handleStart} size=\"lg\">\n                Start\n              </Button>\n            )}\n          </div>\n        </Jumbotron>\n\n        <Card className=\"mb-2\">\n          <Card.Body>\n            <h3>Athletes</h3>\n\n            {athletes.map((athlete, athleteIndex) => (\n              <Form.Group\n                key={athleteIndex}\n                as={Row}\n                controlId={`athlete-${athleteIndex}`}\n              >\n                <Col sm={12}>\n                  <InputGroup>\n                    <Form.Control\n                      style={{ background: !athlete.enabled && \"#6c757d80\" }}\n                      type=\"text\"\n                      placeholder={`Name`}\n                      value={athlete.text}\n                      onChange={(e) =>\n                        setAthletes(\n                          athletes.map((a, ai) =>\n                            ai === athleteIndex\n                              ? { ...a, text: e.target.value }\n                              : a\n                          )\n                        )\n                      }\n                    />\n                    <Form.Control\n                      style={{ background: !athlete.enabled && \"#6c757d80\" }}\n                      type=\"number\"\n                      placeholder={`Time (in seconds)`}\n                      value={athlete.time}\n                      onChange={(e) =>\n                        setAthletes(\n                          athletes.map((a, ai) =>\n                            ai === athleteIndex\n                              ? { ...a, time: +e.target.value }\n                              : a\n                          )\n                        )\n                      }\n                    />\n                    <InputGroup.Append>\n                      <ButtonGroup toggle>\n                        <ToggleButton\n                          variant=\"outline-secondary\"\n                          type=\"checkbox\"\n                          name={`athlete-${athleteIndex}-enabled`}\n                          checked={!athlete.enabled}\n                          disabled={\n                            athlete.enabled &&\n                            athletes.filter((a) => a.enabled).length === 1\n                          }\n                          onChange={(e) =>\n                            setAthletes(\n                              athletes.map((a, ai) =>\n                                ai === athleteIndex\n                                  ? { ...a, enabled: !e.target.checked }\n                                  : a\n                              )\n                            )\n                          }\n                        >\n                          ☠️\n                        </ToggleButton>\n                      </ButtonGroup>\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Col>\n              </Form.Group>\n            ))}\n\n            <h3>Settings</h3>\n            <Form.Group controlId=\"startDelay\">\n              <Form.Label>Start Delay (in seconds)</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={startDelay}\n                onChange={(e) => setStartDelay(+e.target.value)}\n                disabled={running}\n                min={0}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"speechEnabled\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Voice Output\"\n                checked={speechEnabled}\n                onChange={(e) => setSpeechEnabled(e.target.checked)}\n              />\n            </Form.Group>\n          </Card.Body>\n        </Card>\n\n        <footer className=\"text-muted mb-2\" rel=\"noopener noreferrer\">\n          <a href=\"https://github.com/andipaetzold/tttt\">GitHub</a> | &copy;\n          Andi P&auml;tzold\n        </footer>\n      </Container>\n    </>\n  );\n}\n\nfunction toSeconds(ms) {\n  return Math.round(ms / 1_000);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}