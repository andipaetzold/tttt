{"version":3,"sources":["common/speech.tsx","common/constants.tsx","common/config.tsx","common/util.tsx","hooks/useWakeLock.tsx","components/CopyButton.tsx","components/AthletesSettings.tsx","components/Countdown.tsx","assets/discord.svg","assets/discordMark.svg","components/DiscordBot.tsx","components/Footer.tsx","components/Header.tsx","components/App.tsx","index.tsx"],"names":["voiceCommands","nextAthlete","started","speakCommand","command","args","text","isSpeechSupported","msg","window","SpeechSynthesisUtterance","lang","speechSynthesis","cancel","speak","DEFAULT_ATHLETE_NAMES","DEFAULT_SPEECH_ENABLED","LOCAL_STORAGE_KEY","DEFAULT_ATHLETES","slice","map","athleteName","enabled","time","secondsToString","fullTimeInSeconds","minutes","Math","floor","seconds","toString","padStart","isSupported","navigator","CopyButton","useState","tooltipState","setTooltipState","copiedTimeout","useRef","undefined","showButton","setShowButton","useEffect","then","r","OverlayTrigger","placement","overlay","Tooltip","id","getTooltipText","Button","variant","size","className","onClick","clipboard","writeText","current","clearTimeout","setTimeout","e","captureException","icon","faCopy","state","a","permissions","query","name","result","isSupportedFn","AthletesSettings","athletes","onChange","discordCommand","athlete","trim","replaceAll","join","getBackgroundColor","athleteIndex","Form","Group","as","Row","controlId","Col","sm","InputGroup","Control","style","background","type","placeholder","value","ai","target","min","step","ButtonGroup","toggle","Append","ToggleButton","checked","disabled","filter","length","faSkullCrossbones","_","faTrash","block","faPlus","Countdown","totalTime","timePassed","faClock","ProgressBar","transform","now","max","DiscordBot","Alert","Heading","xs","md","src","discordLogo","alt","discordMarkLogo","rel","href","Footer","faPaypal","faGithub","Header","Navbar","bg","Brand","faBiking","initialConfig","rawConfig","localStorage","getItem","config","JSON","parse","speechEnabled","startDelay","loadConfig","App","setState","useFullScreenHandle","fullscreenRef","node","fullscreenActive","active","enterFullscreen","enter","leaveFullscreen","exit","wakelockRef","release","request","document","visibilityState","wakeLock","addEventListener","removeEventListener","useWakeLock","setStartDelay","setSpeechEnabled","setAthletes","round","setRound","getAthleteName","setItem","stringify","useMemo","athletesWithIndex","index","currentAthlete","find","prevTimeRef","useInterval","Date","timeDiff","updatedRound","remainingTime","remainingTimeInSeconds","Container","Jumbotron","ref","faArrowRight","faPlay","faPause","faForward","right","bottom","faStop","faVolumeUp","faVolumeMute","faCompress","faExpand","maxWidth","Card","Body","Label","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","process","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.61bddfcd.chunk.js","sourcesContent":["interface Args {\n    nextAthlete: string;\n    started: boolean;\n}\n\nconst voiceCommands: Record<string, (args: Args) => string> = {\n    [10 * 60]: () => \"10 minutes\",\n    [5 * 60]: () => \"5 minutes\",\n    [3 * 60]: () => \"3 minutes\",\n    [2 * 60]: () => \"2 minutes\",\n    [1 * 60]: () => \"1 minute\",\n    30: () => \"30 seconds\",\n    15: ({ nextAthlete }) => `${nextAthlete}. Get ready.`,\n    10: ({ started }) => (started ? \"Change in 10\" : \"Start in 10\"),\n    5: () => \"Five\",\n    2: () => \"Two\",\n    1: () => \"One\",\n    0: ({ nextAthlete, started }) => (started ? `Change to ${nextAthlete}` : \"Let's go\"),\n    skip: ({ nextAthlete }) => `Go ${nextAthlete}!`,\n};\n\nexport function speakCommand(command: string, args: Args) {\n    if (voiceCommands[command]) {\n        speak(voiceCommands[command](args));\n    }\n}\n\nexport function speak(text: string) {\n    if (!isSpeechSupported) {\n        return;\n    }\n\n    const msg = new window.SpeechSynthesisUtterance();\n    msg.text = text;\n    msg.lang = \"en-US\";\n\n    window.speechSynthesis.cancel();\n    window.speechSynthesis.speak(msg);\n}\n\nexport const isSpeechSupported = \"speechSynthesis\" in window && \"SpeechSynthesisUtterance\" in window;\n","import { isSpeechSupported } from \"./speech\";\n\nexport const DEFAULT_ATHLETE_NAMES = [\"Amelia\", \"Bowie\", \"Coco\", \"Dan\", \"Emma\", \"Finn\", \"Grace\", \"Henry\", \"Irene\", \"Jack\"];\n\nexport const DEFAULT_START_DELAY = 0;\nexport const DEFAULT_TIME_PER_ATHLETE = 30;\nexport const DEFAULT_SPEECH_ENABLED = isSpeechSupported;\n","import { Athlete } from \"../types\";\nimport { DEFAULT_ATHLETE_NAMES, DEFAULT_SPEECH_ENABLED, DEFAULT_START_DELAY, DEFAULT_TIME_PER_ATHLETE } from \"./constants\";\n\ninterface Config {\n    athletes: Athlete[];\n    speechEnabled: boolean;\n    startDelay: number;\n}\n\nconst LOCAL_STORAGE_KEY = \"config\";\n\nconst DEFAULT_ATHLETES = DEFAULT_ATHLETE_NAMES.slice(0, 6).map((athleteName) => ({\n    text: athleteName,\n    enabled: true,\n    time: DEFAULT_TIME_PER_ATHLETE,\n}));\n\nexport function loadConfig() {\n    try {\n        const rawConfig = localStorage.getItem(LOCAL_STORAGE_KEY) ?? \"{}\";\n        const config: Partial<Config> = JSON.parse(rawConfig);\n\n        return {\n            athletes: config.athletes ?? DEFAULT_ATHLETES,\n            speechEnabled: config.speechEnabled ?? DEFAULT_SPEECH_ENABLED,\n            startDelay: config.startDelay ?? DEFAULT_START_DELAY,\n        };\n    } catch {\n        return {\n            athletes: DEFAULT_ATHLETES,\n            speechEnabled: DEFAULT_SPEECH_ENABLED,\n            startDelay: DEFAULT_START_DELAY,\n        };\n    }\n}\n\nexport function saveConfig(config: Config) {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(config));\n}\n","export function secondsToString(fullTimeInSeconds: number) {\n\n    const minutes = Math.floor(fullTimeInSeconds / 60);\n    const seconds = Math.floor(fullTimeInSeconds - minutes * 60);\n\n    if (minutes === 0) {\n        return `${seconds}s`\n    }\n\n    return `${minutes}:${seconds.toString().padStart(2, \"0\")}min`;\n}\n","import { useEffect, useRef } from \"react\";\n\nconst isSupported = \"wakeLock\" in navigator;\n\nexport function useWakeLock(active: boolean) {\n    const wakelockRef = useRef<WakeLock | null>(null);\n\n    useEffect(() => {\n        if (!isSupported) {\n            return;\n        }\n\n        if (!active) {\n            return;\n        }\n\n        const release = async () => {\n            await wakelockRef.current?.release();\n            wakelockRef.current = null;\n        };\n\n        const request = async () => {\n            if (document.visibilityState !== \"visible\") {\n                return;\n            }\n\n            try {\n                await release();\n                wakelockRef.current = await navigator.wakeLock.request(\"screen\");\n            } catch {}\n        };\n\n        request();\n        document.addEventListener(\"visibilitychange\", request);\n\n        return () => {\n            release();\n            document.removeEventListener(\"visibilitychange\", request);\n        };\n    }, [active]);\n}\n","import { faCopy } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { captureException } from \"@sentry/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\ntype State = \"DEFAULT\" | \"SUCCESS\" | \"ERROR\";\n\ninterface Props {\n    command: string;\n}\n\nexport function CopyButton({ command }: Props) {\n    const [tooltipState, setTooltipState] = useState<State>(\"DEFAULT\");\n    const copiedTimeout = useRef<number | undefined>(undefined);\n\n    const [showButton, setShowButton] = useState(false);\n\n    const copyCommand = () => {\n        try {\n            navigator.clipboard.writeText(command);\n\n            if (copiedTimeout.current) {\n                clearTimeout(copiedTimeout.current);\n                copiedTimeout.current = undefined;\n            }\n            setTooltipState(\"SUCCESS\");\n            copiedTimeout.current = (setTimeout(() => setTooltipState(\"DEFAULT\"), 5_000) as unknown) as number;\n        } catch (e) {\n            captureException(e);\n            setTooltipState(\"ERROR\");\n        }\n    };\n\n    useEffect(() => {\n        isSupported.then((r) => setShowButton(r));\n    }, []);\n\n    if (!showButton) {\n        return null;\n    }\n\n    return (\n        <OverlayTrigger\n            placement=\"right\"\n            overlay={<Tooltip id=\"tooltip-copy-athletes\">{getTooltipText(tooltipState)}</Tooltip>}\n        >\n            <Button variant=\"outline-link\" size=\"sm\" className=\"m-0 p-0 border-0\" onClick={copyCommand}>\n                <FontAwesomeIcon icon={faCopy} />\n            </Button>\n        </OverlayTrigger>\n    );\n}\n\nfunction getTooltipText(state: State) {\n    switch (state) {\n        case \"SUCCESS\":\n            return \"Copied!\";\n        case \"ERROR\":\n            return \"Could not copy command.\";\n        default:\n        case \"DEFAULT\":\n            return \"Copy Discord Bot command\";\n    }\n}\n\nasync function isSupportedFn(): Promise<boolean> {\n    if (!(\"permissions\" in navigator)) {\n        return false;\n    }\n\n    const result = await navigator.permissions.query({ name: \"clipboard-write\" });\n    return result.state === \"granted\";\n}\nconst isSupported = isSupportedFn();\n","import { faSkullCrossbones, faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, ButtonGroup, Col, Form, InputGroup, Row, ToggleButton } from \"react-bootstrap\";\nimport { DEFAULT_ATHLETE_NAMES, DEFAULT_TIME_PER_ATHLETE } from \"../common/constants\";\nimport { Athlete, State } from \"../types\";\nimport { CopyButton } from \"./CopyButton\";\n\ninterface Props {\n    athletes: Athlete[];\n    onChange: (athletes: Athlete[]) => void;\n    state: State;\n}\n\nexport function AthletesSettings({ athletes, onChange, state }: Props) {\n    const discordCommand = `!t config athletes ${athletes\n        .map((athlete) => `${athlete.text.trim().replaceAll(\" \", \"_\").replaceAll(\" \", \"_\")}:${athlete.time}`)\n        .join(\" \")}`;\n\n    const getBackgroundColor = (athleteIndex: number) => {\n        if (state === \"stopped\") {\n            return \"#fff\";\n        }\n\n        if (!athletes[athleteIndex].enabled) {\n            return \"#6c757d80\";\n        }\n\n        return \"#fff\";\n    };\n\n    return (\n        <>\n            <h2 className=\"mb-3\">\n                Athletes <CopyButton command={discordCommand} />\n            </h2>\n\n            {athletes.map((athlete, athleteIndex) => (\n                <Form.Group key={athleteIndex} as={Row} controlId={`athlete-${athleteIndex}`}>\n                    <Col sm={12}>\n                        <InputGroup>\n                            <Form.Control\n                                style={{ background: getBackgroundColor(athleteIndex) }}\n                                type=\"text\"\n                                placeholder=\"Name\"\n                                value={athlete.text}\n                                onChange={(e) =>\n                                    onChange(\n                                        athletes.map((a, ai) => (ai === athleteIndex ? { ...a, text: e.target.value } : a))\n                                    )\n                                }\n                            />\n                            <Form.Control\n                                style={{ background: getBackgroundColor(athleteIndex) }}\n                                type=\"number\"\n                                placeholder=\"Time (in seconds)\"\n                                min={5}\n                                step={5}\n                                value={athlete.time}\n                                onChange={(e) =>\n                                    onChange(\n                                        athletes.map((a, ai) => (ai === athleteIndex ? { ...a, time: +e.target.value } : a))\n                                    )\n                                }\n                            />\n                            {state !== \"stopped\" && (\n                                <ButtonGroup toggle as={InputGroup.Append}>\n                                    <ToggleButton\n                                        variant=\"outline-secondary\"\n                                        type=\"checkbox\"\n                                        name={`athlete-${athleteIndex}-enabled`}\n                                        checked={!athlete.enabled}\n                                        disabled={athlete.enabled && athletes.filter((a) => a.enabled).length === 1}\n                                        value={athlete.text}\n                                        onChange={(e) =>\n                                            onChange(\n                                                athletes.map((a, ai) =>\n                                                    ai === athleteIndex ? { ...a, enabled: !e.target.checked } : a\n                                                )\n                                            )\n                                        }\n                                    >\n                                        <FontAwesomeIcon icon={faSkullCrossbones} />\n                                    </ToggleButton>\n                                </ButtonGroup>\n                            )}\n                            {state === \"stopped\" && (\n                                <InputGroup.Append>\n                                    <Button\n                                        variant=\"danger\"\n                                        disabled={athletes.length === 1}\n                                        onClick={() => onChange(athletes.filter((_, ai) => ai !== athleteIndex))}\n                                    >\n                                        <FontAwesomeIcon icon={faTrash} />\n                                    </Button>\n                                </InputGroup.Append>\n                            )}\n                        </InputGroup>\n                    </Col>\n                </Form.Group>\n            ))}\n\n            {state === \"stopped\" && (\n                <Button\n                    variant=\"light\"\n                    block\n                    onClick={() => {\n                        onChange([\n                            ...athletes,\n                            {\n                                text: DEFAULT_ATHLETE_NAMES[athletes.length] ?? \"\",\n                                time: DEFAULT_TIME_PER_ATHLETE,\n                                enabled: true,\n                            },\n                        ]);\n                    }}\n                >\n                    <FontAwesomeIcon icon={faPlus} /> Add athlete\n                </Button>\n            )}\n        </>\n    );\n}\n","import { faClock } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport { secondsToString } from \"../common/util\";\n\ninterface Props {\n    timePassed: number;\n    totalTime: number;\n}\n\nexport function Countdown({ totalTime, timePassed }: Props) {\n    return (\n        <>\n            <h3 className=\"text-center display-6\">\n                <FontAwesomeIcon icon={faClock} /> {secondsToString(totalTime - timePassed)}\n            </h3>\n\n            <ProgressBar\n                style={{ transform: \"scaleX(-1)\", background: \"white\" }}\n                now={Math.floor(totalTime - timePassed)}\n                max={totalTime}\n            />\n        </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/discord.3372aeeb.svg\";","export default __webpack_public_path__ + \"static/media/discordMark.d2c3bfa7.svg\";","import { Alert, Col, Row } from \"react-bootstrap\";\nimport discordLogo from \"../assets/discord.svg\";\nimport discordMarkLogo from \"../assets/discordMark.svg\";\n\nexport function DiscordBot() {\n    return (\n        <Alert variant=\"info\">\n            <Alert.Heading>Discord Bot</Alert.Heading>\n            <Row>\n                <Col xs={12} sm={4} md={2}>\n                    <img src={discordLogo} alt=\"Discord Logo\" className=\"d-block d-sm-none\" />\n                    <img src={discordMarkLogo} alt=\"Discord Logo\" className=\"d-none d-sm-block\" />\n                </Col>\n                <Col xs={12} sm={8} md={10}>\n                    <p className=\"mt-2\">\n                        No need to run the Web App on a rider's computer and mess around with the audio setup. Just add the\n                        TTT-Timer Discord Bot to your server and type <code>!t help</code> for details on how to use it.\n                        After starting the timer, it will appear as a user within your call and coach you through the race.\n                    </p>\n\n                    <div className=\"d-flex justify-content-end\">\n                        <a\n                            className=\"btn btn-light\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href=\"https://andipaetzold.github.io/tttt-discord\"\n                        >\n                            Documentation\n                        </a>\n\n                        <a\n                            className=\"btn btn-primary ml-2\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href=\"https://discord.com/api/oauth2/authorize?client_id=806979974594560060&amp;permissions=3155968&amp;scope=bot\"\n                        >\n                            Install\n                        </a>\n                    </div>\n                </Col>\n            </Row>\n        </Alert>\n    );\n}\n","import { faGithub, faPaypal } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport function Footer() {\n    return (\n        <footer className=\"text-muted mt-4 mb-2 text-center\">\n            <p>\n                <small>\n                    Made with ♥ for{\" \"}\n                    <a href=\"https://www.wtrl.racing\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        WTRL\n                    </a>{\" \"}\n                    by{\" \"}\n                    <a href=\"mailto:tttt@andipaetzold.com\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        Andi P&auml;tzold\n                    </a>\n                </small>\n            </p>\n            <p>\n                <small>\n                    <a href=\"https://paypal.me/andipaetzold\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        <FontAwesomeIcon icon={faPaypal} /> Donate via PayPal\n                    </a>\n                </small>\n            </p>\n            <p>\n                <small>\n                    <a href=\"https://github.com/andipaetzold/tttt\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        <FontAwesomeIcon icon={faGithub} /> GitHub\n                    </a>\n                </small>\n            </p>\n        </footer>\n    );\n}\n","import { faBiking } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Navbar } from \"react-bootstrap\";\n\nexport function Header() {\n    return (\n        <Navbar bg=\"light\" className=\"mb-2\">\n            <Navbar.Brand className=\"mx-auto\">\n                <FontAwesomeIcon icon={faBiking} /> Team Time Trial Timer <FontAwesomeIcon icon={faBiking} />\n            </Navbar.Brand>\n        </Navbar>\n    );\n}\n","import {\n    faArrowRight,\n    faCompress,\n    faExpand,\n    faForward,\n    faPause,\n    faPlay,\n    faPlus,\n    faStop,\n    faVolumeMute,\n    faVolumeUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport useInterval from \"@use-it/interval\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, Card, Container, Form, Jumbotron } from \"react-bootstrap\";\nimport { useFullScreenHandle } from \"react-full-screen\";\nimport { loadConfig, saveConfig } from \"../common/config\";\nimport { isSpeechSupported, speakCommand } from \"../common/speech\";\nimport { secondsToString } from \"../common/util\";\nimport { useWakeLock } from \"../hooks/useWakeLock\";\nimport { Round, State } from \"../types\";\nimport { AthletesSettings } from \"./AthletesSettings\";\nimport { CopyButton } from \"./CopyButton\";\nimport { Countdown } from \"./Countdown\";\nimport { DiscordBot } from \"./DiscordBot\";\nimport { Footer } from \"./Footer\";\nimport { Header } from \"./Header\";\n\nconst initialConfig = loadConfig();\n\nexport default function App() {\n    const [state, setState] = useState<State>(\"stopped\");\n\n    const {\n        node: fullscreenRef,\n        active: fullscreenActive,\n        enter: enterFullscreen,\n        exit: leaveFullscreen,\n    } = useFullScreenHandle();\n\n    useWakeLock(state === \"running\" || state === \"paused\");\n\n    const [startDelay, setStartDelay] = useState(initialConfig.startDelay);\n    const [speechEnabled, setSpeechEnabled] = useState(initialConfig.speechEnabled);\n    const [athletes, setAthletes] = useState(initialConfig.athletes);\n\n    const [round, setRound] = useState<Round | undefined>(undefined);\n\n    const getAthleteName = (athleteIndex: number) => {\n        if (athleteIndex === undefined) {\n            return \"\";\n        }\n\n        return athletes[athleteIndex].text || `Athlete ${athleteIndex + 1}`;\n    };\n\n    useEffect(() => {\n        saveConfig({ athletes, startDelay, speechEnabled });\n    }, [athletes, startDelay, speechEnabled]);\n\n    const nextAthlete = useMemo(() => {\n        const athletesWithIndex = athletes.map((a, ai) => ({ ...a, index: ai }));\n\n        if (round?.currentAthlete === undefined) {\n            return athletesWithIndex.find((a) => a.enabled)!.index;\n        }\n\n        return [...athletesWithIndex.slice(round.currentAthlete + 1), ...athletesWithIndex].filter((a) => a.enabled)[0]\n            .index;\n    }, [round, athletes]);\n\n    const speak = (command: string) => {\n        if (!speechEnabled) {\n            return;\n        }\n\n        speakCommand(command, {\n            nextAthlete: getAthleteName(nextAthlete),\n            started: round?.currentAthlete !== undefined,\n        });\n    };\n\n    const prevTimeRef = useRef<number | undefined>();\n    useInterval(() => {\n        const now = Date.now();\n        const timeDiff = (now - prevTimeRef.current!) / 1_000;\n        prevTimeRef.current = now;\n\n        if (state !== \"running\" || round === undefined) {\n            return;\n        }\n\n        let updatedRound: Round = {\n            ...round,\n            timePassed: round.timePassed + timeDiff,\n        };\n\n        if (Math.floor(round.timePassed) !== Math.floor(updatedRound.timePassed)) {\n            const remainingTime = updatedRound.totalTime - updatedRound.timePassed;\n            const remainingTimeInSeconds = Math.floor(Math.max(0, remainingTime));\n\n            speak(remainingTimeInSeconds.toString());\n\n            if (remainingTimeInSeconds === 0) {\n                updatedRound = {\n                    timePassed: -remainingTime,\n                    currentAthlete: nextAthlete,\n                    totalTime: athletes[nextAthlete].time,\n                };\n            }\n        }\n\n        setRound(updatedRound);\n    }, 500);\n\n    const handleSkip = () => {\n        speak(\"skip\");\n        setRound({\n            timePassed: 0,\n            currentAthlete: nextAthlete,\n            totalTime: athletes[nextAthlete].time,\n        });\n    };\n\n    const handleStart = () => {\n        const now = Date.now();\n        prevTimeRef.current = now;\n\n        setRound({\n            timePassed: 0,\n            totalTime: startDelay > 0 ? startDelay : athletes[0].time,\n            currentAthlete: startDelay > 0 ? undefined : nextAthlete,\n        });\n\n        setAthletes((athletes) => athletes.map((a) => ({ ...a, enabled: true })));\n\n        setState(\"running\");\n    };\n\n    const handleStop = () => {\n        setState(\"stopped\");\n        setAthletes((athletes) => athletes.map((a) => ({ ...a, enabled: true })));\n    };\n\n    const handlePause = () => {\n        setState(\"paused\");\n    };\n\n    const handleResume = () => {\n        setState(\"running\");\n    };\n\n    const handlePlus10 = () => {\n        if (!round) {\n            return;\n        }\n\n        setRound({\n            ...round,\n            totalTime: round.totalTime + 10,\n        });\n    };\n\n    return (\n        <>\n            <Header />\n\n            <Container>\n                <Jumbotron\n                    className=\"pt-4 mb-2 position-relative d-flex flex-column align-items-center justify-content-center\"\n                    ref={fullscreenRef}\n                >\n                    {state !== \"stopped\" && round !== undefined ? (\n                        <div className=\"w-100\">\n                            <h1 className=\"text-center display-2\">\n                                {round.currentAthlete === undefined ? \"Wait\" : getAthleteName(round.currentAthlete)}\n                            </h1>\n\n                            <h2 className=\"text-center display-5\">\n                                <FontAwesomeIcon icon={faArrowRight} /> {getAthleteName(nextAthlete)}\n                            </h2>\n\n                            <Countdown timePassed={round.timePassed} totalTime={round.totalTime} />\n\n                            <div className=\"mt-4 text-center\">\n                                {state === \"paused\" ? (\n                                    <Button variant=\"info\" className=\"mr-1\" onClick={handleResume}>\n                                        <FontAwesomeIcon icon={faPlay} /> Resume\n                                    </Button>\n                                ) : (\n                                    <Button variant=\"info\" className=\"mr-1\" onClick={handlePause}>\n                                        <FontAwesomeIcon icon={faPause} /> Pause\n                                    </Button>\n                                )}\n\n                                <Button variant=\"warning\" className=\"mr-1\" onClick={handleSkip}>\n                                    <FontAwesomeIcon icon={faForward} />{\" \"}\n                                    {round.currentAthlete === undefined ? \"Start now\" : \"Skip\"}\n                                </Button>\n\n                                {state === \"running\" && (\n                                    <Button variant=\"success\" onClick={handlePlus10}>\n                                        <FontAwesomeIcon icon={faPlus} /> 10s\n                                    </Button>\n                                )}\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"text-center\">\n                            <Button variant=\"primary\" onClick={handleStart} size=\"lg\">\n                                <FontAwesomeIcon icon={faPlay} /> Start{\" \"}\n                                {startDelay > 0 && `in ${secondsToString(startDelay)}`}\n                            </Button>\n                        </div>\n                    )}\n\n                    <div className=\"position-absolute\" style={{ right: 16, bottom: 16 }}>\n                        {state !== \"stopped\" && (\n                            <Button variant=\"danger\" size=\"sm\" onClick={handleStop}>\n                                <FontAwesomeIcon icon={faStop} /> Stop Timer\n                            </Button>\n                        )}\n\n                        {isSpeechSupported && (\n                            <>\n                                {speechEnabled ? (\n                                    <Button\n                                        className=\"ml-2\"\n                                        size=\"sm\"\n                                        variant=\"secondary\"\n                                        onClick={() => setSpeechEnabled(false)}\n                                    >\n                                        <FontAwesomeIcon icon={faVolumeUp} />\n                                    </Button>\n                                ) : (\n                                    <Button\n                                        className=\"ml-2\"\n                                        size=\"sm\"\n                                        variant=\"danger\"\n                                        onClick={() => setSpeechEnabled(true)}\n                                    >\n                                        <FontAwesomeIcon icon={faVolumeMute} />\n                                    </Button>\n                                )}\n                            </>\n                        )}\n\n                        {fullscreenActive ? (\n                            <Button className=\"ml-2\" size=\"sm\" variant=\"danger\" onClick={leaveFullscreen}>\n                                <FontAwesomeIcon icon={faCompress} />\n                            </Button>\n                        ) : (\n                            <Button className=\"ml-2\" size=\"sm\" variant=\"secondary\" onClick={enterFullscreen}>\n                                <FontAwesomeIcon icon={faExpand} />\n                            </Button>\n                        )}\n                    </div>\n\n                    <div className=\"mt-5\" style={{ maxWidth: \"500px\" }}>\n                        <AthletesSettings athletes={athletes} onChange={setAthletes} state={state} />\n                    </div>\n                </Jumbotron>\n\n                <Card className=\"mb-2\">\n                    <Card.Body>\n                        <h3>Settings</h3>\n\n                        <Form.Group controlId=\"startDelay\">\n                            <Form.Label>\n                                Start Delay (in seconds) <CopyButton command={`!t config delay ${startDelay}`} />\n                            </Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                value={startDelay}\n                                onChange={(e) => setStartDelay(+e.target.value)}\n                                min={0}\n                                step={30}\n                                disabled={state !== \"stopped\"}\n                            />\n                        </Form.Group>\n                    </Card.Body>\n                </Card>\n\n                <DiscordBot />\n                <Footer />\n            </Container>\n        </>\n    );\n}\n","import \"./polyfills\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\n\nSentry.init({\n    dsn: \"https://51f308cc68f84d17a534fbd3e08610c9@o260685.ingest.sentry.io/5685762\",\n    integrations: [new Integrations.BrowserTracing()],\n    tracesSampleRate: 1.0,\n    enabled: process.env.NODE_ENV === \"production\",\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}