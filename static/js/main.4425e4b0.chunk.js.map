{"version":3,"sources":["common/constants.js","common/config.js","common/speech.js","common/util.js","hooks/useWakeLock.js","components/AthletesSettings.js","components/Footer.js","components/Header.js","components/VoiceSettings.js","components/App.js","hooks/useVoices.js","index.js"],"names":["DEFAULT_ATHLETE_NAMES","LOCAL_STORAGE_KEY","DEFAULT_ATHLETES","slice","map","athleteName","text","enabled","time","voiceCommands","voiceChanged","start","15","nextAthlete","10","5","2","1","0","speakCommand","command","args","voice","msg","SpeechSynthesisUtterance","lang","window","speechSynthesis","cancel","speak","toSeconds","ms","Math","round","isSupported","navigator","AthletesSettings","athletes","onChange","athlete","athleteIndex","Form","Group","as","Row","controlId","Col","sm","InputGroup","Control","style","background","type","placeholder","value","e","a","ai","target","min","Append","ButtonGroup","toggle","ToggleButton","variant","name","checked","disabled","filter","length","icon","faSkullCrossbones","Footer","className","href","rel","faPaypal","faGithub","Header","Navbar","bg","Brand","faBiking","VoiceSettings","voices","Label","newVoiceURI","newVoice","find","v","voiceURI","Text","Button","padding","fontSize","border","onClick","undefined","setTimeout","location","reload","initialConfig","rawConfig","localStorage","getItem","config","JSON","parse","speechEnabled","startDelay","loadConfig","App","useState","state","setState","active","wakelockRef","useRef","useEffect","release","current","request","document","visibilityState","wakeLock","addEventListener","removeEventListener","useWakeLock","setStartDelay","setSpeechEnabled","setAthletes","getAthleteName","setVoices","updateVoices","getVoices","onvoiceschanged","startsWith","useVoices","setVoiceURI","timeUntilNextChange","setTimeUntilNextChange","currentAthlete","setCurrentAthlete","setItem","stringify","useMemo","athletesWithIndex","index","startTimeRef","prevTimeRef","pauseTimeRef","changeToNextAthlete","now","Date","useInterval","changeTime","secondsSinceStart","max","Container","Jumbotron","faArrowRight","faClock","ProgressBar","transform","faStop","faPlay","faPause","faForward","size","Card","Body","newCount","newAthletes","Array","keys","i","Check","label","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4425e4b0.chunk.js","sourcesContent":["export const DEFAULT_ATHLETE_NAMES = [\n  \"Amelia\",\n  \"Bowie\",\n  \"Coco\",\n  \"Dan\",\n  \"Emma\",\n  \"Finn\",\n  \"Grace\",\n  \"Henry\",\n  \"Irene\",\n  \"Jack\",\n];\n\n\nexport const DEFAULT_START_DELAY = 0;\nexport const DEFAULT_TIME_PER_ATHLETE = 30;\nexport const DEFAULT_SPEECH_ENABLED = false;","import {\n  DEFAULT_ATHLETE_NAMES,\n  DEFAULT_SPEECH_ENABLED,\n  DEFAULT_START_DELAY,\n  DEFAULT_TIME_PER_ATHLETE,\n} from \"./constants\";\n\nconst LOCAL_STORAGE_KEY = \"config\";\n\nconst DEFAULT_ATHLETES = DEFAULT_ATHLETE_NAMES.slice(0, 6).map(\n  (athleteName) => ({\n    text: athleteName,\n    enabled: true,\n    time: DEFAULT_TIME_PER_ATHLETE,\n  })\n);\n\nexport function loadConfig() {\n  try {\n    const rawConfig = localStorage.getItem(LOCAL_STORAGE_KEY);\n    const config = JSON.parse(rawConfig);\n\n    return {\n      athletes: config.athletes || DEFAULT_ATHLETES,\n      speechEnabled: config.speechEnabled,\n      startDelay: config.startDelay,\n      voice: config.voice,\n    };\n  } catch {\n    return {\n      athletes: DEFAULT_ATHLETES,\n      speechEnabled: DEFAULT_SPEECH_ENABLED,\n      startDelay: DEFAULT_START_DELAY,\n    };\n  }\n}\n\nexport function saveConfig(config) {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(config));\n}\n","const voiceCommands = {\n  voiceChanged: () => \"Go faster!\",\n  start: () => \"Start\",\n  15: ({ nextAthlete }) => `${nextAthlete}. Get ready.`,\n  10: () => \"Change in 10\",\n  5: () => \"Five\",\n  2: () => \"Two\",\n  1: () => \"One\",\n  0: ({ nextAthlete }) => `Change to ${nextAthlete}`,\n};\n\nexport function speakCommand(command, args, voice) {\n  if (voiceCommands[command]) {\n    speak(voiceCommands[command](args), voice);\n  }\n}\n\nexport function speak(text, voice) {\n  const msg = new SpeechSynthesisUtterance();\n  msg.text = text;\n  msg.lang = \"en-US\";\n  msg.voice = voice;\n\n  window.speechSynthesis.cancel();\n  window.speechSynthesis.speak(msg);\n}\n","export function toSeconds(ms) {\n  return Math.round(ms / 1_000);\n}\n","import { useEffect, useRef } from \"react\";\n\nconst isSupported = \"wakeLock\" in navigator;\n\nexport function useWakeLock(active) {\n  const wakelockRef = useRef(null);\n\n  useEffect(() => {\n    if (!isSupported) {\n      return;\n    }\n\n    if (!active) {\n      return;\n    }\n\n    const release = async () => {\n      await wakelockRef.current?.release();\n      wakelockRef.current = null;\n    };\n\n    const request = async () => {\n      if (document.visibilityState !== \"visible\") {\n        return;\n      }\n\n      try {\n        await release();\n        wakelockRef.current = await navigator.wakeLock.request(\"screen\");\n      } catch {}\n    };\n\n    request();\n    document.addEventListener(\"visibilitychange\", request);\n\n    return () => {\n      release();\n      document.removeEventListener(\"visibilitychange\", request);\n    };\n  }, [active]);\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  ButtonGroup,\n  Col,\n  Form,\n  InputGroup,\n  Row,\n  ToggleButton,\n} from \"react-bootstrap\";\nimport { faSkullCrossbones } from \"@fortawesome/free-solid-svg-icons\";\n\nexport function AthletesSettings({ athletes, onChange }) {\n  return (\n    <>\n      <h3>Athletes</h3>\n\n      {athletes.map((athlete, athleteIndex) => (\n        <Form.Group\n          key={athleteIndex}\n          as={Row}\n          controlId={`athlete-${athleteIndex}`}\n        >\n          <Col sm={12}>\n            <InputGroup>\n              <Form.Control\n                style={{ background: !athlete.enabled && \"#6c757d80\" }}\n                type=\"text\"\n                placeholder=\"Name\"\n                value={athlete.text}\n                onChange={(e) =>\n                  onChange(\n                    athletes.map((a, ai) =>\n                      ai === athleteIndex ? { ...a, text: e.target.value } : a\n                    )\n                  )\n                }\n              />\n              <Form.Control\n                style={{ background: !athlete.enabled && \"#6c757d80\" }}\n                type=\"number\"\n                placeholder=\"Time (in seconds)\"\n                min={1}\n                value={athlete.time}\n                onChange={(e) =>\n                  onChange(\n                    athletes.map((a, ai) =>\n                      ai === athleteIndex ? { ...a, time: +e.target.value } : a\n                    )\n                  )\n                }\n              />\n              <InputGroup.Append>\n                <ButtonGroup toggle>\n                  <ToggleButton\n                    variant=\"outline-secondary\"\n                    type=\"checkbox\"\n                    name={`athlete-${athleteIndex}-enabled`}\n                    checked={!athlete.enabled}\n                    disabled={\n                      athlete.enabled &&\n                      athletes.filter((a) => a.enabled).length === 1\n                    }\n                    onChange={(e) =>\n                      onChange(\n                        athletes.map((a, ai) =>\n                          ai === athleteIndex\n                            ? { ...a, enabled: !e.target.checked }\n                            : a\n                        )\n                      )\n                    }\n                  >\n                    <FontAwesomeIcon icon={faSkullCrossbones} />\n                  </ToggleButton>\n                </ButtonGroup>\n              </InputGroup.Append>\n            </InputGroup>\n          </Col>\n        </Form.Group>\n      ))}\n    </>\n  );\n}\n","import { faGithub, faPaypal } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport function Footer() {\n  return (\n    <footer className=\"text-muted mt-4 mb-2 text-center\">\n      <p>\n        <small>\n          Made with ♥ for{\" \"}\n          <a\n            href=\"https://www.wtrl.racing\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            WTRL\n          </a>{\" \"}\n          by{\" \"}\n          <a\n            href=\"https://zwiftpower.com/profile.php?z=1861132\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Andi P&auml;tzold\n          </a>\n        </small>\n      </p>\n      <p>\n        <small>\n          <a\n            href=\"https://paypal.me/andipaetzold\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <FontAwesomeIcon icon={faPaypal} /> Donate via PayPal\n          </a>\n        </small>\n      </p>\n      <p>\n        <small>\n          <a\n            href=\"https://github.com/andipaetzold/tttt\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <FontAwesomeIcon icon={faGithub} /> GitHub\n          </a>\n        </small>\n      </p>\n    </footer>\n  );\n}\n","import { faBiking } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Navbar } from \"react-bootstrap\";\n\nexport function Header() {\n  return (\n    <Navbar bg=\"light\" className=\"mb-2\">\n      <Navbar.Brand className=\"mx-auto\">\n        <FontAwesomeIcon icon={faBiking} /> Team Time Trial Timer{\" \"}\n        <FontAwesomeIcon icon={faBiking} />\n      </Navbar.Brand>\n    </Navbar>\n  );\n}\n","import { Button, Form } from \"react-bootstrap\";\nimport { speakCommand } from \"../common/speech\";\n\nexport function VoiceSettings({ voices, voice, onChange }) {\n  const handleChange = (e) => {\n    const newVoiceURI = e.target.value;\n    const newVoice = voices.find((v) => v.voiceURI === newVoiceURI);\n\n    if (!newVoice) {\n      return;\n    }\n\n    speakCommand(\"voiceChanged\", {}, newVoice);\n    onChange(newVoice);\n  };\n  return (\n    <Form.Group controlId=\"voice\">\n      <Form.Label>Voice</Form.Label>\n      <Form.Control\n        as=\"select\"\n        onChange={handleChange}\n        value={voice?.voiceURI}\n        disabled={voices.length === 0}\n      >\n        {voices.length > 0 ? (\n          voices.map((v) => (\n            <option key={v.voiceURI} value={v.voiceURI}>\n              {v.name}\n            </option>\n          ))\n        ) : (\n          <option key=\"default\">Default</option>\n        )}\n      </Form.Control>\n      <Form.Text>\n        If the voice output does not work anymore, click{\" \"}\n        <Button\n          style={{\n            padding: 0,\n            fontSize: \"100%\",\n            border: \"none\",\n          }}\n          variant=\"link\"\n          onClick={() => {\n            onChange(undefined);\n\n            // make sure the changes are saved to local storage\n            setTimeout(() => {\n              window.location.reload();\n            }, 0);\n          }}\n        >\n          here\n        </Button>{\" \"}\n        to reset the app and keep the default voice.\n      </Form.Text>\n    </Form.Group>\n  );\n}\n","import { faClock } from \"@fortawesome/free-regular-svg-icons\";\nimport {\n  faArrowRight,\n  faForward,\n  faPause,\n  faPlay,\n  faStop,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport useInterval from \"@use-it/interval\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  Container,\n  Form,\n  Jumbotron,\n  ProgressBar,\n} from \"react-bootstrap\";\nimport { loadConfig, saveConfig } from \"../common/config\";\nimport {\n  DEFAULT_ATHLETE_NAMES,\n  DEFAULT_TIME_PER_ATHLETE,\n} from \"../common/constants\";\nimport { speakCommand } from \"../common/speech\";\nimport { toSeconds } from \"../common/util\";\nimport { useVoices } from \"../hooks/useVoices\";\nimport { useWakeLock } from \"../hooks/useWakeLock\";\nimport { AthletesSettings } from \"./AthletesSettings\";\nimport { Footer } from \"./Footer\";\nimport { Header } from \"./Header\";\nimport { VoiceSettings } from \"./VoiceSettings\";\n\nconst initialConfig = loadConfig();\n\nexport default function App() {\n  const [state, setState] = useState(\"stopped\");\n\n  useWakeLock(state === \"running\" || state === \"paused\");\n\n  const [startDelay, setStartDelay] = useState(initialConfig.startDelay);\n  const [speechEnabled, setSpeechEnabled] = useState(\n    initialConfig.speechEnabled\n  );\n  const [athletes, setAthletes] = useState(initialConfig.athletes);\n\n  const getAthleteName = (athleteIndex) => {\n    if (athleteIndex === undefined) {\n      return \"\";\n    }\n\n    return athletes[athleteIndex].text || `Athlete ${athleteIndex + 1}`;\n  };\n\n  const voices = useVoices();\n  const [voiceURI, setVoiceURI] = useState(initialConfig.voice);\n  const voice = voices.find((v) => v.voiceURI === voiceURI);\n\n  const [timeUntilNextChange, setTimeUntilNextChange] = useState(0);\n  const [currentAthlete, setCurrentAthlete] = useState(undefined);\n\n  useEffect(() => {\n    saveConfig({ athletes, startDelay, speechEnabled, voice: voiceURI });\n  }, [athletes, startDelay, speechEnabled, voiceURI]);\n\n  const nextAthlete = useMemo(() => {\n    const athletesWithIndex = athletes.map((a, ai) => ({ ...a, index: ai }));\n\n    if (currentAthlete === undefined) {\n      return athletesWithIndex.find((a) => a.enabled).index;\n    }\n\n    return [\n      ...athletesWithIndex.slice(currentAthlete + 1),\n      ...athletesWithIndex,\n    ].filter((a) => a.enabled)[0].index;\n  }, [currentAthlete, athletes]);\n\n  const startTimeRef = useRef();\n  const prevTimeRef = useRef();\n  const pauseTimeRef = useRef();\n\n  const speak = (command) => {\n    if (!speechEnabled) {\n      return;\n    }\n    speakCommand(command, { nextAthlete: getAthleteName(nextAthlete) }, voice);\n  };\n\n  const changeToNextAthlete = () => {\n    setCurrentAthlete(nextAthlete);\n    setTimeUntilNextChange(athletes[nextAthlete].time);\n\n    const now = Date.now();\n    startTimeRef.current = now;\n    if (state === \"paused\") {\n      pauseTimeRef.current = now;\n    }\n  };\n\n  useInterval(() => {\n    if (state !== \"running\") {\n      return;\n    }\n\n    const changeTime =\n      currentAthlete === undefined ? startDelay : athletes[currentAthlete].time;\n\n    const now = Date.now();\n\n    const secondsSinceStart = toSeconds(now - startTimeRef.current);\n    const prevSecondsSinceStart = toSeconds(\n      prevTimeRef.current - startTimeRef.current\n    );\n\n    if (secondsSinceStart !== prevSecondsSinceStart) {\n      if (secondsSinceStart >= changeTime) {\n        speak(currentAthlete === undefined ? \"start\" : 0);\n        changeToNextAthlete();\n      } else {\n        speak(changeTime - secondsSinceStart);\n        setTimeUntilNextChange(Math.max(changeTime - secondsSinceStart, 0));\n      }\n    }\n\n    prevTimeRef.current = now;\n  }, 500);\n\n  const handleStart = () => {\n    const now = Date.now();\n\n    prevTimeRef.current = now;\n    startTimeRef.current = now;\n\n    setTimeUntilNextChange(startDelay > 0 ? startDelay : athletes[0].time);\n    setCurrentAthlete(startDelay > 0 ? undefined : nextAthlete);\n\n    setState(\"running\");\n  };\n\n  const handleStop = () => {\n    setState(\"stopped\");\n  };\n\n  const handlePause = () => {\n    setState(\"paused\");\n    pauseTimeRef.current = Date.now();\n  };\n\n  const handleResume = () => {\n    setState(\"running\");\n    startTimeRef.current =\n      Date.now() - (pauseTimeRef.current - startTimeRef.current);\n  };\n\n  return (\n    <>\n      <Header />\n\n      <Container>\n        <Jumbotron className=\"mb-2\">\n          {state !== \"stopped\" ? (\n            <>\n              <h1 className=\"text-center display-2\">\n                {currentAthlete === undefined\n                  ? \"Wait\"\n                  : getAthleteName(currentAthlete)}\n              </h1>\n\n              <h2 className=\"text-center display-5\">\n                <FontAwesomeIcon icon={faArrowRight} />{\" \"}\n                {getAthleteName(nextAthlete)}\n              </h2>\n\n              <h3 className=\"text-center display-6\">\n                <FontAwesomeIcon icon={faClock} /> {timeUntilNextChange}s\n              </h3>\n              <ProgressBar\n                style={{ transform: \"scaleX(-1)\", background: \"white\" }}\n                now={timeUntilNextChange}\n                max={\n                  currentAthlete === undefined\n                    ? startDelay\n                    : athletes[currentAthlete].time\n                }\n              />\n\n              <div className=\"mt-4 text-center\">\n                <Button variant=\"danger\" className=\"mr-1\" onClick={handleStop}>\n                  <FontAwesomeIcon icon={faStop} /> Stop\n                </Button>\n                {state === \"paused\" ? (\n                  <Button\n                    variant=\"info\"\n                    className=\"mr-1\"\n                    onClick={handleResume}\n                  >\n                    <FontAwesomeIcon icon={faPlay} /> Resume\n                  </Button>\n                ) : (\n                  <Button variant=\"info\" className=\"mr-1\" onClick={handlePause}>\n                    <FontAwesomeIcon icon={faPause} /> Pause\n                  </Button>\n                )}\n\n                <Button variant=\"warning\" onClick={changeToNextAthlete}>\n                  <FontAwesomeIcon icon={faForward} /> Skip\n                </Button>\n              </div>\n            </>\n          ) : (\n            <div className=\"text-center\">\n              <Button variant=\"primary\" onClick={handleStart} size=\"lg\">\n                <FontAwesomeIcon icon={faPlay} /> Start\n              </Button>\n            </div>\n          )}\n        </Jumbotron>\n\n        <Card className=\"mb-2\">\n          <Card.Body>\n            <AthletesSettings athletes={athletes} onChange={setAthletes} />\n\n            <h3>Settings</h3>\n            <Form.Group controlId=\"startDelay\">\n              <Form.Label>Start Delay (in seconds)</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={startDelay}\n                onChange={(e) => setStartDelay(+e.target.value)}\n                min={0}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"athleteCount\">\n              <Form.Label>Athlete Count</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={athletes.length}\n                onChange={(e) => {\n                  const newCount = Math.max(\n                    1,\n                    Math.min(DEFAULT_ATHLETE_NAMES.length, +e.target.value)\n                  );\n                  const newAthletes = [...new Array(newCount).keys()].map(\n                    (i) => ({\n                      text: athletes[i]?.text ?? DEFAULT_ATHLETE_NAMES[i],\n                      time: athletes[i]?.time ?? DEFAULT_TIME_PER_ATHLETE,\n                      enabled: athletes[i]?.enabled ?? true,\n                    })\n                  );\n                  setAthletes(newAthletes);\n                }}\n                min={1}\n                max={DEFAULT_ATHLETE_NAMES.length}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"speechEnabled\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Voice Output\"\n                checked={speechEnabled}\n                onChange={(e) => setSpeechEnabled(e.target.checked)}\n              />\n              <Form.Text>Voice Output is not supported on iOS</Form.Text>\n            </Form.Group>\n            <VoiceSettings\n              voices={voices}\n              voice={voice}\n              onChange={(v) => setVoiceURI(v?.voiceURI)}\n            />\n          </Card.Body>\n        </Card>\n\n        <Footer />\n      </Container>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useVoices() {\n  const [voices, setVoices] = useState([]);\n\n  const updateVoices = () => {\n    setVoices(window.speechSynthesis.getVoices());\n  };\n\n  useEffect(() => {\n    if (typeof window.speechSynthesis === \"undefined\") {\n      return;\n    }\n\n    updateVoices();\n    window.speechSynthesis.onvoiceschanged = updateVoices;\n    return () => (window.speechSynthesis.onvoiceschanged = undefined);\n  }, []);\n\n  return voices.filter((voice) => voice.lang.startsWith(\"en-\"));\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}